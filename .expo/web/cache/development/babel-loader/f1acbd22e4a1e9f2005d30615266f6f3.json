{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { createAppContainer } from \"react-navigation\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport 'react-native-gesture-handler';\nimport { UserContext } from \"./context/UserContext\";\nimport LoginScreen from \"./screens/LoginScreen.jsx\";\nimport NewTeamScreen from \"./screens/NewTeamScreen\";\nimport SuccessfullScreen from \"./screens/SuccessfullScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar StackNavigator = createStackNavigator({\n  Login: LoginScreen,\n  NewTeam: NewTeamScreen,\n  Successfull: SuccessfullScreen\n}, {\n  initialRouteName: \"Login\",\n  headerMode: \"none\"\n});\nvar Routes = createAppContainer(StackNavigator);\nexport default function App() {\n  var _useState = useState(UserContext),\n      _useState2 = _slicedToArray(_useState, 2),\n      userContext = _useState2[0],\n      setUserContext = _useState2[1];\n\n  return _jsx(UserContext.Provider, {\n    value: {\n      userContext: userContext,\n      setUserContext: setUserContext\n    },\n    children: _jsx(Routes, {})\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/mr b/Desktop/planning-react-native/App.tsx"],"names":["React","useState","createAppContainer","createStackNavigator","UserContext","LoginScreen","NewTeamScreen","SuccessfullScreen","StackNavigator","Login","NewTeam","Successfull","initialRouteName","headerMode","Routes","App","userContext","setUserContext","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAA4C,OAA5C;;AAEA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AAEA,OAAO,8BAAP;AAEA,SAASC,WAAT;AAEA,OAAOC,WAAP;AACA,OAAOC,aAAP;AACA,OAAOC,iBAAP;;AAEA,IAAMC,cAAc,GAAGL,oBAAoB,CACzC;AACEM,EAAAA,KAAK,EAAGJ,WADV;AAEEK,EAAAA,OAAO,EAAEJ,aAFX;AAGEK,EAAAA,WAAW,EAAEJ;AAHf,CADyC,EAMzC;AACEK,EAAAA,gBAAgB,EAAE,OADpB;AAEEC,EAAAA,UAAU,EAAE;AAFd,CANyC,CAA3C;AAYA,IAAMC,MAAM,GAAGZ,kBAAkB,CAACM,cAAD,CAAjC;AAEA,eAAe,SAASO,GAAT,GAAe;AAE5B,kBAAsCd,QAAQ,CAACG,WAAD,CAA9C;AAAA;AAAA,MAAOY,WAAP;AAAA,MAAoBC,cAApB;;AAEA,SACE,KAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAED,MAAAA,WAAW,EAAXA,WAAF;AAAeC,MAAAA,cAAc,EAAdA;AAAf,KAA7B;AAAA,cACE,KAAC,MAAD;AADF,IADF;AAMD;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState, useContext } from \"react\";\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { createAppContainer } from \"react-navigation\";\r\nimport { createStackNavigator } from \"react-navigation-stack\";\r\n\r\nimport 'react-native-gesture-handler';\r\n\r\nimport { UserContext, UserState } from './context/UserContext';\r\n\r\nimport LoginScreen from './screens/LoginScreen.jsx';\r\nimport NewTeamScreen from './screens/NewTeamScreen';\r\nimport SuccessfullScreen from './screens/SuccessfullScreen';\r\n\r\nconst StackNavigator = createStackNavigator(\r\n  {\r\n    Login : LoginScreen,\r\n    NewTeam: NewTeamScreen,\r\n    Successfull: SuccessfullScreen\r\n  },\r\n  {\r\n    initialRouteName: \"Login\",\r\n    headerMode: \"none\"\r\n  }\r\n)\r\n\r\nconst Routes = createAppContainer(StackNavigator);\r\n\r\nexport default function App() {\r\n\r\n  const [userContext, setUserContext] = useState(UserContext);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ userContext, setUserContext }}>\r\n      <Routes />\r\n    </UserContext.Provider>\r\n    \r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}