{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { UserContext } from \"../context/UserContext\";\nimport URL from \"../utils/URL\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar PlanningScreen = function PlanningScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      userContext = _useContext.userContext,\n      setUserContext = _useContext.setUserContext;\n\n  var usersUrl = URL + \"/api/v1/users/getAllUsers/\";\n  var team = userContext.team;\n  var getUrl = usersUrl + team;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passwordErrorMessage = _useState4[0],\n      setPasswordErrorMessage = _useState4[1];\n\n  var _useState5 = useState({\n    password: \"\",\n    passwordConfirm: \"\",\n    passwordCurrent: \"\"\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newPasswordValues = _useState6[0],\n      setNewPasswordValue = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      toggleChangePassword = _useState8[0],\n      setToggleChangePassword = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      toggleAdminPage = _useState10[0],\n      setToggleAdminPage = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      teamMembers = _useState12[0],\n      setTeamMembers = _useState12[1];\n\n  useEffect(function () {\n    function getUsers() {\n      var response, users;\n      return _regeneratorRuntime.async(function getUsers$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios.get(getUrl));\n\n            case 2:\n              response = _context.sent;\n              users = response.data.data;\n              setTeamMembers(users);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getUsers();\n  }, []);\n\n  function deleteUser(user) {\n    var deleteResponse, response, users;\n    return _regeneratorRuntime.async(function deleteUser$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(axios.delete(URL + \"/api/v1/users/\" + user));\n\n          case 2:\n            deleteResponse = _context2.sent;\n            console.log(deleteResponse.status);\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(axios.get(getUrl));\n\n          case 6:\n            response = _context2.sent;\n            users = response.data.data;\n            setTeamMembers(users);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var setToken = function setToken(value) {\n    return _regeneratorRuntime.async(function setToken$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', value));\n\n          case 3:\n            _context3.next = 8;\n            break;\n\n          case 5:\n            _context3.prev = 5;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0.message);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var getToken = function getToken(value) {\n    var returnValue;\n    return _regeneratorRuntime.async(function getToken$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(value));\n\n          case 3:\n            returnValue = _context4.sent;\n            return _context4.abrupt(\"return\", returnValue);\n\n          case 7:\n            _context4.prev = 7;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(\"error when returning getToken, message : \", _context4.t0.message);\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  function logout() {\n    return _regeneratorRuntime.async(function logout$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(setToken('logOut'));\n\n          case 2:\n            setUserContext({\n              loggedIn: false,\n              isAdmin: false,\n              firstName: \"\",\n              lastName: \"\",\n              email: \"\",\n              team: \"\",\n              id: \"\"\n            });\n            navigation.navigate(\"Login\");\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function changePassword(passwordCurrent, password, passwordConfirm) {\n    var token, localToken, headers, response;\n    return _regeneratorRuntime.async(function changePassword$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            if (!(password !== passwordConfirm)) {\n              _context6.next = 3;\n              break;\n            }\n\n            setPasswordErrorMessage(\"Password and confirm don't match moron !\");\n            return _context6.abrupt(\"return\");\n\n          case 3:\n            if (!(password === passwordCurrent)) {\n              _context6.next = 6;\n              break;\n            }\n\n            setPasswordErrorMessage(\"Can't change for the same password stupid !\");\n            return _context6.abrupt(\"return\");\n\n          case 6:\n            setIsLoading(true);\n            token = \"Bearer \";\n            _context6.prev = 8;\n            localToken = getToken('token');\n            token += localToken;\n            headers = {\n              'Content-Type': 'application/json',\n              'Authorization': token\n            };\n            _context6.next = 14;\n            return _regeneratorRuntime.awrap(axios.put(backendUrl + \"/api/v1/users/changePassword\", {\n              passwordCurrent: newPasswordValues.passwordCurrent,\n              password: newPasswordValues.password,\n              passwordConfirm: newPasswordValues.passwordConfirm,\n              email: userContext.email\n            }));\n\n          case 14:\n            response = _context6.sent;\n\n            if (response.status === 200) {\n              setIsLoading(false);\n              setPasswordErrorMessage(\"Password Changed\");\n              setTimeout(function () {\n                setPasswordErrorMessage(\"\");\n                setToggleChangePassword(false);\n              }, 1000);\n            } else {\n              setIsLoading(false);\n              setPasswordErrorMessage(\"Something's wrong...\");\n            }\n\n            _context6.next = 21;\n            break;\n\n          case 18:\n            _context6.prev = 18;\n            _context6.t0 = _context6[\"catch\"](8);\n            console.log(_context6.t0.message);\n\n          case 21:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, [[8, 18]], Promise);\n  }\n\n  return _jsxs(SafeAreaView, {\n    style: styles.globalContainer,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Pressable, {\n        onPress: function onPress() {\n          return navigation.navigate(\"Planning\");\n        },\n        children: _jsx(Image, {\n          source: require(\"./../assets/icons/back.png\"),\n          style: styles.png\n        })\n      }), _jsx(Pressable, {\n        onPress: function onPress() {\n          logout();\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 25,\n            borderWidth: 2,\n            borderColor: \"black\",\n            borderRadius: 5,\n            padding: 10\n          },\n          children: \"Logout\"\n        })\n      })]\n    }), isLoading === false ? _jsxs(ScrollView, {\n      children: [_jsxs(Pressable, {\n        onPress: function onPress() {\n          return setToggleChangePassword(!toggleChangePassword);\n        },\n        style: _objectSpread({\n          marginTop: 30\n        }, styles.inline),\n        children: [_jsx(Image, {\n          source: require(\"./../assets/icons/key.png\"),\n          style: styles.svg\n        }), _jsx(Text, {\n          style: styles.textInline,\n          children: \"Change Password\"\n        })]\n      }), toggleChangePassword === true ? _jsxs(View, {\n        children: [_jsxs(View, {\n          style: styles.passwordView,\n          children: [_jsx(Text, {\n            style: styles.passwordText,\n            children: \"Previous Password\"\n          }), _jsx(TextInput, {\n            style: styles.passwordTextInput,\n            placeholder: \"\",\n            secureTextEntry: true,\n            onChangeText: function onChangeText(text) {\n              setNewPasswordValue(function (previousData) {\n                return _objectSpread(_objectSpread({}, previousData), {}, {\n                  passwordCurrent: text.toString()\n                });\n              });\n            }\n          })]\n        }), _jsxs(View, {\n          style: styles.passwordView,\n          children: [_jsx(Text, {\n            style: styles.passwordText,\n            children: \"New Password\"\n          }), _jsx(TextInput, {\n            style: styles.passwordTextInput,\n            placeholder: \"\",\n            secureTextEntry: true,\n            onChangeText: function onChangeText(text) {\n              setNewPasswordValue(function (previousData) {\n                return _objectSpread(_objectSpread({}, previousData), {}, {\n                  password: text.toString()\n                });\n              });\n            }\n          })]\n        }), _jsxs(View, {\n          style: styles.passwordView,\n          children: [_jsx(Text, {\n            style: styles.passwordText,\n            children: \"Confirm New Password\"\n          }), _jsx(TextInput, {\n            style: styles.passwordTextInput,\n            placeholder: \"\",\n            secureTextEntry: true,\n            onChangeText: function onChangeText(text) {\n              setNewPasswordValue(function (previousData) {\n                return _objectSpread(_objectSpread({}, previousData), {}, {\n                  passwordConfirm: text.toString()\n                });\n              });\n            }\n          })]\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: function onPress() {\n            changePassword(newPasswordValues.passwordCurrent, newPasswordValues.password, newPasswordValues.passwordConfirm);\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Submit\"\n          })\n        }), _jsx(Text, {\n          style: {\n            color: \"rgb(168, 66, 50)\",\n            marginTop: 15,\n            fontSize: 15,\n            alignSelf: \"center\"\n          },\n          children: passwordErrorMessage\n        })]\n      }) : null, userContext.isAdmin === true ? _jsxs(Pressable, {\n        style: styles.inline,\n        onPress: function onPress() {\n          return setToggleAdminPage(!toggleAdminPage);\n        },\n        children: [_jsx(Image, {\n          source: require(\"./../assets/icons/people.png\"),\n          style: styles.svg\n        }), _jsx(Text, {\n          style: styles.textInline,\n          children: \"Admin Panel\"\n        })]\n      }) : null, toggleAdminPage === true ? _jsxs(View, {\n        style: styles.adminContainer,\n        children: [teamMembers.map(function (el, idx) {\n          return _jsxs(View, {\n            style: styles.adminLine,\n            children: [_jsxs(Text, {\n              style: styles.adminText,\n              children: [el.firstName, \" \", el.lastName]\n            }), _jsx(Pressable, {\n              onPress: function onPress() {\n                return deleteUser(el.id);\n              },\n              children: _jsx(Image, {\n                source: require(\"./../assets/icons/delete.png\"),\n                style: styles.svg\n              })\n            })]\n          });\n        }), _jsx(Pressable, {\n          style: _objectSpread(_objectSpread({}, styles.button), {}, {\n            marginTop: 50\n          }),\n          onPress: function onPress() {\n            return navigation.navigate(\"AddUser\");\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Add User\"\n          })\n        })]\n      }) : null]\n    }) : _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"rgb(110, 116, 170)\",\n      style: {\n        paddingTop: 150\n      }\n    })]\n  });\n};\n\nexport default PlanningScreen;\nvar styles = StyleSheet.create({\n  globalContainer: {\n    flex: 1,\n    backgroundColor: \"rgb(235, 232, 231)\"\n  },\n  header: {\n    display: \"flex\",\n    width: \"100%\",\n    flexDirection: \"row\",\n    height: 65,\n    backgroundColor: \"rgb(235, 232, 231)\",\n    paddingLeft: 10,\n    paddingRight: 10,\n    justifyContent: \"space-between\",\n    marginBottom: 20\n  },\n  png: {\n    height: 35,\n    width: 35\n  },\n  svg: {\n    height: 30,\n    width: 30\n  },\n  inline: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    margin: 5,\n    borderWidth: 1,\n    borderColor: \"black\",\n    borderRadius: 5,\n    padding: 10,\n    alignItems: \"center\"\n  },\n  textInline: {\n    fontSize: 18,\n    marginLeft: 10\n  },\n  passwordView: {\n    margin: 5,\n    marginLeft: 15,\n    marginBottom: 10\n  },\n  passwordText: {\n    fontSize: 15,\n    marginBottom: 5\n  },\n  passwordTextInput: {\n    height: 50,\n    borderRadius: 10,\n    backgroundColor: \"rgb(209, 204, 203)\",\n    fontSize: 25,\n    paddingLeft: 10\n  },\n  button: {\n    backgroundColor: \"rgb(238, 247, 255)\",\n    width: 150,\n    height: 45,\n    display: \"flex\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 10,\n    marginTop: 10\n  },\n  buttonText: {\n    fontSize: 20\n  },\n  adminContainer: {\n    margin: 10\n  },\n  adminLine: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingLeft: 10,\n    paddingRight: 10,\n    height: 50,\n    borderWidth: 1,\n    borderRadius: 5,\n    alignItems: \"center\",\n    marginBottom: 5\n  },\n  adminText: {\n    fontSize: 15\n  }\n});","map":{"version":3,"sources":["C:/Users/mr b/Desktop/planning-react-native/screens/SettingsScreen.tsx"],"names":["React","useState","useContext","useEffect","SafeAreaView","axios","AsyncStorage","UserContext","URL","PlanningScreen","navigation","userContext","setUserContext","usersUrl","team","getUrl","isLoading","setIsLoading","passwordErrorMessage","setPasswordErrorMessage","password","passwordConfirm","passwordCurrent","newPasswordValues","setNewPasswordValue","toggleChangePassword","setToggleChangePassword","toggleAdminPage","setToggleAdminPage","teamMembers","setTeamMembers","getUsers","get","response","users","data","deleteUser","user","delete","deleteResponse","console","log","status","setToken","value","setItem","message","getToken","getItem","returnValue","logout","loggedIn","isAdmin","firstName","lastName","email","id","navigate","changePassword","token","localToken","headers","put","backendUrl","setTimeout","styles","globalContainer","header","require","png","fontSize","borderWidth","borderColor","borderRadius","padding","marginTop","inline","svg","textInline","passwordView","passwordText","passwordTextInput","text","previousData","toString","button","buttonText","color","alignSelf","adminContainer","map","el","idx","adminLine","adminText","paddingTop","StyleSheet","create","flex","backgroundColor","display","width","flexDirection","height","paddingLeft","paddingRight","justifyContent","marginBottom","margin","alignItems","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\r\nimport { StyleSheet, Text, View, Image, TextInput, Button, Pressable, ImageBackground, ActivityIndicator, ScrollView  } from 'react-native';\r\nimport { CardStyleInterpolators } from 'react-navigation-stack';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { NavigationContext } from 'react-navigation';\r\nimport axios from 'axios';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nimport { UserContext } from '../context/UserContext';\r\n\r\nimport URL from '../utils/URL';\r\n\r\nimport Adduser from './AddUser';\r\n\r\nconst PlanningScreen = ({ navigation }) => {\r\n\r\n    const { userContext, setUserContext } = useContext(UserContext);\r\n\r\n    const usersUrl: string = `${URL}/api/v1/users/getAllUsers/`;\r\n    const team: string = userContext.team;\r\n    const getUrl = usersUrl + team\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState(\"\");\r\n    const [newPasswordValues, setNewPasswordValue] = useState({\r\n        password: \"\",\r\n        passwordConfirm: \"\",\r\n        passwordCurrent: \"\"\r\n    })\r\n\r\n    const [toggleChangePassword, setToggleChangePassword] = useState(false);\r\n    const [toggleAdminPage, setToggleAdminPage] = useState(false);\r\n\r\n    const [teamMembers, setTeamMembers] = useState([]);\r\n\r\n    // Lazy loading the users from mongo DB\r\n    useEffect(() => {\r\n        async function getUsers() {\r\n            const response = await axios.get(getUrl);\r\n            const users = response.data.data;\r\n            setTeamMembers(users);\r\n        }\r\n\r\n        getUsers();\r\n        \r\n    }, [])\r\n\r\n    // Delete Users\r\n    async function deleteUser(user: string) {\r\n        // Send delete request via API\r\n        const deleteResponse = await axios.delete(`${URL}/api/v1/users/${user}`);\r\n        console.log(deleteResponse.status);\r\n\r\n        // Set new users list\r\n        const response = await axios.get(getUrl);\r\n        const users = response.data.data;\r\n        setTeamMembers(users);\r\n    }\r\n\r\n    // Logout function\r\n\r\n    const setToken = async (value) => {\r\n        try {\r\n          await AsyncStorage.setItem('token', value)\r\n        } catch (e) {\r\n          console.log(e.message);\r\n        }\r\n    }\r\n\r\n    const getToken = async (value) => {\r\n        try {\r\n            const returnValue = await AsyncStorage.getItem(value);\r\n            return returnValue;\r\n        } catch (e) {\r\n            console.log(\"error when returning getToken, message : \", e.message);\r\n        }\r\n    }\r\n\r\n    async function logout() {\r\n        await setToken('logOut');\r\n\r\n        setUserContext({\r\n            loggedIn: false,\r\n            isAdmin: false,\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            team: \"\", \r\n            id: \"\"\r\n        });\r\n\r\n        navigation.navigate(\"Login\");\r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n    async function changePassword(passwordCurrent: string, password: string, passwordConfirm: string)\r\n    {\r\n        if (password !== passwordConfirm)\r\n        {\r\n            setPasswordErrorMessage(\"Password and confirm don't match moron !\");\r\n            return;\r\n        }\r\n\r\n        if (password === passwordCurrent)\r\n        {\r\n            setPasswordErrorMessage(\"Can't change for the same password stupid !\");\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n\r\n        let token = \"Bearer \";\r\n        try {\r\n            let localToken = getToken('token');\r\n            token += localToken;\r\n            const headers = {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n              }\r\n\r\n            const response = await axios.put(`${backendUrl}/api/v1/users/changePassword`, {\r\n                passwordCurrent: newPasswordValues.passwordCurrent,\r\n                password: newPasswordValues.password,\r\n                passwordConfirm: newPasswordValues.passwordConfirm,\r\n                email: userContext.email\r\n            });\r\n\r\n            if (response.status === 200)\r\n            {\r\n                setIsLoading(false);\r\n                setPasswordErrorMessage(\"Password Changed\");\r\n                setTimeout(() => {\r\n                    setPasswordErrorMessage(\"\");\r\n                    setToggleChangePassword(false);\r\n                }, 1000);\r\n            }\r\n\r\n            else {\r\n                setIsLoading(false);\r\n                setPasswordErrorMessage(\"Something's wrong...\");\r\n            }\r\n                \r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <SafeAreaView style={styles.globalContainer}>\r\n            <View style={styles.header}>\r\n                <Pressable\r\n                    onPress={() => navigation.navigate(\"Planning\")}>\r\n                    <Image source={require('./../assets/icons/back.png')} style={styles.png}/>\r\n                </Pressable>\r\n\r\n                <Pressable\r\n                    onPress={()=> {\r\n                        logout();\r\n                    }}\r\n                >\r\n                    <Text style={{\r\n                        fontSize: 25,\r\n                        borderWidth: 2,\r\n                        borderColor: \"black\",\r\n                        borderRadius: 5,\r\n                        padding: 10\r\n                    }}>Logout</Text>\r\n                </Pressable>\r\n\r\n            </View>\r\n            \r\n            {\r\n                isLoading === false ?\r\n\r\n                <ScrollView>\r\n                <Pressable \r\n                    onPress={() => setToggleChangePassword(!toggleChangePassword)}\r\n                    style={{marginTop: 30, ...styles.inline}}>\r\n                    <Image source={require('./../assets/icons/key.png')} style={styles.svg}/>\r\n                    <Text style={styles.textInline}>Change Password</Text>\r\n                </Pressable>\r\n\r\n                {\r\n                    toggleChangePassword === true ? \r\n                    <View>\r\n                        <View style={styles.passwordView}>\r\n                            <Text style={styles.passwordText}>Previous Password</Text>\r\n                            <TextInput \r\n                                style={styles.passwordTextInput}\r\n                                placeholder=\"\"\r\n                                secureTextEntry={true}\r\n                                onChangeText={text => {\r\n                                    setNewPasswordValue(previousData => {\r\n                                        return {...previousData, passwordCurrent: text.toString()}\r\n                                    })\r\n                                }}\r\n                            />\r\n                        </View>\r\n\r\n                        <View style={styles.passwordView}>\r\n                            <Text style={styles.passwordText}>New Password</Text>\r\n                            <TextInput \r\n                                style={styles.passwordTextInput}\r\n                                placeholder=\"\"\r\n                                secureTextEntry={true}\r\n                                onChangeText={text => {\r\n                                    setNewPasswordValue(previousData => {\r\n                                        return {...previousData, password: text.toString()}\r\n                                    })\r\n                                }}\r\n                            />\r\n                        </View>\r\n\r\n                        <View style={styles.passwordView}>\r\n                            <Text style={styles.passwordText}>Confirm New Password</Text>\r\n                            <TextInput \r\n                                style={styles.passwordTextInput}\r\n                                placeholder=\"\"\r\n                                secureTextEntry={true}\r\n                                onChangeText={text => {\r\n                                    setNewPasswordValue(previousData => {\r\n                                        return {...previousData, passwordConfirm: text.toString()}\r\n                                    })\r\n                                }}\r\n                            />\r\n                        </View>\r\n\r\n                        <Pressable \r\n                            style={styles.button}\r\n                            onPress={() => {\r\n                                changePassword(newPasswordValues.passwordCurrent, newPasswordValues.password, newPasswordValues.passwordConfirm)\r\n                            }}\r\n                            >\r\n                            <Text style={styles.buttonText}>Submit</Text>\r\n                        </Pressable>\r\n\r\n                        <Text style={{color: \"rgb(168, 66, 50)\", marginTop: 15, fontSize: 15, alignSelf:\"center\"}}>{passwordErrorMessage}</Text>\r\n                    </View>\r\n\r\n\r\n                    : null\r\n                }\r\n                \r\n                {\r\n                    userContext.isAdmin === true ?\r\n\r\n                    <Pressable \r\n                        style={styles.inline}\r\n                        onPress={() => setToggleAdminPage(!toggleAdminPage)}\r\n                        >\r\n                        <Image source={require('./../assets/icons/people.png')} style={styles.svg}/>\r\n                        <Text style={styles.textInline}>Admin Panel</Text>\r\n                    </Pressable>\r\n\r\n                    : null\r\n                }\r\n\r\n                {\r\n                    toggleAdminPage === true ? \r\n\r\n                    <View style={styles.adminContainer}>\r\n                        {\r\n                            teamMembers.map((el, idx) => {\r\n                                return(\r\n                                    <View style={styles.adminLine}>\r\n                                        <Text style={styles.adminText}>{el.firstName} {el.lastName}</Text>\r\n                                        <Pressable\r\n                                            onPress={() => deleteUser(el.id)}\r\n                                        >\r\n                                            <Image  source={require('./../assets/icons/delete.png')} style={styles.svg}/>\r\n                                        </Pressable>\r\n                                    </View>)\r\n                            })\r\n                        }\r\n\r\n                        <Pressable \r\n                            style={{...styles.button, marginTop: 50}}\r\n                            onPress={() => navigation.navigate(\"AddUser\")}\r\n                            >\r\n                            <Text style={styles.buttonText}>Add User</Text>\r\n                        </Pressable>\r\n                    </View>\r\n                    \r\n                    \r\n                    : null\r\n\r\n                }\r\n                \r\n            </ScrollView>\r\n\r\n            : \r\n\r\n            <ActivityIndicator size=\"large\" color=\"rgb(110, 116, 170)\" style={{paddingTop: 150}}/>\r\n\r\n            }\r\n            \r\n            \r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default PlanningScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    globalContainer: {\r\n        flex: 1,\r\n        backgroundColor: \"rgb(235, 232, 231)\",\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        flexDirection: \"row\",\r\n        height: 65,\r\n        backgroundColor: \"rgb(235, 232, 231)\",\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        justifyContent: \"space-between\",\r\n        marginBottom: 20        \r\n    },\r\n    png: {\r\n        height: 35,\r\n        width: 35\r\n    },\r\n    svg: {\r\n        height: 30,\r\n        width: 30\r\n    },\r\n    inline: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        margin: 5,\r\n        borderWidth: 1,\r\n        borderColor: \"black\",\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        alignItems: \"center\"\r\n    },\r\n    textInline: {\r\n        fontSize: 18,\r\n        marginLeft: 10,\r\n    },\r\n    passwordView: {\r\n        margin: 5,\r\n        marginLeft: 15,\r\n        marginBottom: 10\r\n    },\r\n    passwordText: {\r\n        fontSize: 15,\r\n        marginBottom: 5\r\n    },\r\n    passwordTextInput: {\r\n        height: 50,\r\n        borderRadius: 10,\r\n        backgroundColor: \"rgb(209, 204, 203)\",\r\n        fontSize: 25,\r\n        paddingLeft: 10,\r\n    },\r\n    button: {\r\n        backgroundColor: \"rgb(238, 247, 255)\",\r\n        width: 150,\r\n        height: 45,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        alignSelf: \"center\",\r\n        justifyContent: \"center\",\r\n        borderRadius: 10,\r\n        marginTop: 10,\r\n    },\r\n    buttonText: {\r\n        fontSize: 20\r\n    },\r\n    adminContainer: {\r\n        margin: 10,\r\n    },\r\n    adminLine: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        height: 50,\r\n        borderWidth: 1,\r\n        borderRadius: 5,\r\n        alignItems: \"center\",\r\n        marginBottom: 5\r\n    },\r\n    adminText: {\r\n        fontSize: 15,\r\n\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}