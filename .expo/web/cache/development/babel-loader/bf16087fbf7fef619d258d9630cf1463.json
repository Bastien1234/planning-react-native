{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { UserContext } from \"../context/UserContext\";\nimport URL from \"../utils/URL\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar backendUrl = URL;\nvar cssColors = {\n  na: \"rgb(255, 255, 153)\",\n  off: \"\",\n  am: \"rgb(153, 204, 255)\",\n  mid: \"rgb(255, 153, 153)\",\n  pm: \"rgb(255, 204, 153)\",\n  cp: \"rgb(153, 255, 255)\"\n};\nvar planningOptions = [\"am\", \"mid\", \"pm\", \"off\", \"cp\"];\nvar weekList = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\nvar monthList = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"Decemnber\"];\n\nvar PlanningScreen = function PlanningScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      userContext = _useContext.userContext,\n      setUserContext = _useContext.setUserContext;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var team = userContext.team;\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      changePasswordPage = _useState4[0],\n      setChangePasswordPage = _useState4[1];\n\n  var _useState5 = useState({\n    x: null,\n    y: null\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      popUpPosition = _useState6[0],\n      setPopUpPosition = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showPopUp = _useState8[0],\n      setShowPopUp = _useState8[1];\n\n  var _useState9 = useState(\"nobodyyy\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      currentRequestor = _useState10[0],\n      setCurrentRequestor = _useState10[1];\n\n  var _useState11 = useState(\"noDayYet\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      currentIndexDay = _useState12[0],\n      setCurrentIndexDay = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      monthState = _useState14[0],\n      setMonthState = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      passwordErrorMessage = _useState16[0],\n      setPasswordErrorMessage = _useState16[1];\n\n  var _useState17 = useState({\n    password: \"\",\n    passwordConfirm: \"\",\n    passwordCurrent: \"\"\n  }),\n      _useState18 = _slicedToArray(_useState17, 2),\n      newPasswordValues = _useState18[0],\n      setNewPasswordValue = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      showSideBar = _useState20[0],\n      setShowSideBar = _useState20[1];\n\n  function usersReload() {\n    var result, filteredResults, names, workingMonth;\n    return _regeneratorRuntime.async(function usersReload$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(backendUrl + \"/api/v1/users/getAllUsers/\" + team));\n\n          case 2:\n            result = _context.sent;\n            filteredResults = result.data.data;\n            names = [];\n            filteredResults.forEach(function (el) {\n              return names.push({\n                firstName: el.firstName,\n                lastName: el.lastName\n              });\n            });\n            setUsers(names);\n            setDb(filteredResults);\n            workingMonth = monthList[new Date().getMonth()];\n            setMonthState(workingMonth);\n            setIsLoading(false);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var now = new Date();\n\n  function daysInThisMonth() {\n    return new Date(now.getFullYear(), now.getMonth() + 1, 0).getDate();\n  }\n\n  var daysInCurrentMonth = daysInThisMonth();\n  var currentYear = new Date().getFullYear();\n  var currentMonth = new Date().getMonth() + 1;\n  if (currentMonth < 10) currentMonth = \"0\" + currentMonth;else currentMonth = \"\" + currentMonth;\n  var monthDaysArray = [];\n\n  for (var i = 1; i <= daysInCurrentMonth; i++) {\n    monthDaysArray.push(i);\n  }\n\n  var monthIndexDayArray = [];\n\n  for (var _i = 1; _i <= daysInCurrentMonth; _i++) {\n    var newI;\n\n    if (_i < 10) {\n      newI = \"0\" + _i;\n    } else {\n      newI = \"\" + _i;\n    }\n\n    monthIndexDayArray.push(currentYear + \"-\" + currentMonth + \"-\" + newI);\n  }\n\n  var isWeekEnd = [];\n\n  for (var _i2 = 1; _i2 <= daysInCurrentMonth; _i2++) {\n    var day = new Date(now.getFullYear(), now.getMonth(), _i2).getDay();\n    day === 6 || day === 0 ? isWeekEnd.push(\"rgb(75, 219, 130)\") : isWeekEnd.push(0);\n  }\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      users = _useState22[0],\n      setUsers = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      db = _useState24[0],\n      setDb = _useState24[1];\n\n  navigation.addListener('didFocus', function () {\n    console.log(\"calling generate month from did focus listener\");\n    generateMonth();\n  });\n  useEffect(function () {\n    console.log(\"calling generate month from use effect\");\n    generateMonth();\n  }, [isFocus]);\n\n  var setToken = function setToken(value) {\n    return _regeneratorRuntime.async(function setToken$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', value));\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0.message);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var getToken = function getToken(value) {\n    var returnValue;\n    return _regeneratorRuntime.async(function getToken$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(value));\n\n          case 3:\n            returnValue = _context3.sent;\n            return _context3.abrupt(\"return\", returnValue);\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(\"error when returning getToken, message : \", _context3.t0.message);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  function logout() {\n    return _regeneratorRuntime.async(function logout$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(setToken('logOut'));\n\n          case 2:\n            setUserContext({\n              loggedIn: false,\n              isAdmin: false,\n              firstName: \"\",\n              lastName: \"\",\n              email: \"\",\n              team: \"\",\n              id: \"\"\n            });\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function generateMonth() {\n    var date, team, month, year, token, localToken, headers, response;\n    return _regeneratorRuntime.async(function generateMonth$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            console.log(\"generate month called\");\n            date = new Date();\n            team = userContext.team;\n            month = date.getMonth();\n            year = date.getFullYear();\n            token = \"Bearer \";\n            _context5.prev = 6;\n            _context5.next = 9;\n            return _regeneratorRuntime.awrap(getToken('token'));\n\n          case 9:\n            localToken = _context5.sent;\n            token += localToken;\n            headers = {\n              'Content-Type': 'application/json',\n              'Authorization': token\n            };\n            _context5.next = 14;\n            return _regeneratorRuntime.awrap(axios.post(backendUrl + \"/api/v1/users/generateMonth\", {\n              team: team,\n              month: month,\n              year: year\n            }, {\n              headers: headers\n            }));\n\n          case 14:\n            response = _context5.sent;\n\n            if (response.status === 200) {\n                console.log(\"generate month called success response\");\n                usersReload();\n              }\n\n            _context5.next = 21;\n            break;\n\n          case 18:\n            _context5.prev = 18;\n            _context5.t0 = _context5[\"catch\"](6);\n            console.log(_context5.t0.message);\n\n          case 21:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[6, 18]], Promise);\n  }\n\n  function setNewShift(option, currentRequestor, currentIndexDay) {\n    var token, localToken, headers, response;\n    return _regeneratorRuntime.async(function setNewShift$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            token = \"Bearer \";\n            _context6.prev = 1;\n            localToken = getToken('token');\n            token += localToken;\n            headers = {\n              'Content-Type': 'application/json',\n              'Authorization': token\n            };\n            _context6.next = 7;\n            return _regeneratorRuntime.awrap(axios.post(backendUrl + \"/api/v1/users/requestChangeShift\", {\n              requestor: currentRequestor,\n              newShift: option,\n              indexDay: currentIndexDay\n            }, {\n              headers: headers\n            }));\n\n          case 7:\n            response = _context6.sent;\n\n            if (response.status === 200) {\n              usersReload();\n            }\n\n            _context6.next = 14;\n            break;\n\n          case 11:\n            _context6.prev = 11;\n            _context6.t0 = _context6[\"catch\"](1);\n            console.log(_context6.t0.message);\n\n          case 14:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, [[1, 11]], Promise);\n  }\n\n  function changePassword(passwordCurrent, password, passwordConfirm) {\n    var token, localToken, headers, response;\n    return _regeneratorRuntime.async(function changePassword$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            if (!(password !== passwordConfirm)) {\n              _context7.next = 3;\n              break;\n            }\n\n            setPasswordErrorMessage(\"Password and confirm don't match moron !\");\n            return _context7.abrupt(\"return\");\n\n          case 3:\n            if (!(password === passwordCurrent)) {\n              _context7.next = 6;\n              break;\n            }\n\n            setPasswordErrorMessage(\"Can't change for the same password stupid !\");\n            return _context7.abrupt(\"return\");\n\n          case 6:\n            token = \"Bearer \";\n            _context7.prev = 7;\n            localToken = getToken('token');\n            token += localToken;\n            headers = {\n              'Content-Type': 'application/json',\n              'Authorization': token\n            };\n            _context7.next = 13;\n            return _regeneratorRuntime.awrap(axios.put(backendUrl + \"/api/v1/users/changePassword\", {\n              passwordCurrent: newPasswordValues.passwordCurrent,\n              password: newPasswordValues.password,\n              passwordConfirm: newPasswordValues.passwordConfirm,\n              email: userContext.email\n            }));\n\n          case 13:\n            response = _context7.sent;\n\n            if (response.status === 200) {\n              setPasswordErrorMessage(\"Password Changed\");\n              setTimeout(function () {\n                setPasswordErrorMessage(\"\");\n              }, 500);\n            } else {\n              setPasswordErrorMessage(\"Something's wrong...\");\n            }\n\n            _context7.next = 20;\n            break;\n\n          case 17:\n            _context7.prev = 17;\n            _context7.t0 = _context7[\"catch\"](7);\n            console.log(_context7.t0.message);\n\n          case 20:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, [[7, 17]], Promise);\n  }\n\n  var _useState25 = useState(\"\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      userChangingShift = _useState26[0],\n      setUserChangingShift = _useState26[1];\n\n  var _useState27 = useState(\"\"),\n      _useState28 = _slicedToArray(_useState27, 2),\n      shiftChanging = _useState28[0],\n      setShiftChanging = _useState28[1];\n\n  var _useState29 = useState(\"\"),\n      _useState30 = _slicedToArray(_useState29, 2),\n      dayChanging = _useState30[0],\n      setDayChanging = _useState30[1];\n\n  var _useState31 = useState(\"\"),\n      _useState32 = _slicedToArray(_useState31, 2),\n      userFirstName = _useState32[0],\n      setUserFirstName = _useState32[1];\n\n  var SideView = function SideView() {\n    return _jsxs(View, {\n      style: {\n        left: 0,\n        top: 0,\n        height: \"100%\",\n        width: 200,\n        position: \"absolute\",\n        backgroundColor: \"rgb(110, 116, 170)\",\n        paddingTop: 50,\n        paddingLeft: 15,\n        zIndex: 1000,\n        elevation: 50\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 25,\n          fontWeight: \"bold\"\n        },\n        children: \"Changing shift\"\n      }), _jsx(Text, {\n        style: {\n          fontSize: 20,\n          marginTop: 15\n        },\n        children: \"For user : \"\n      }), _jsx(Text, {\n        style: {\n          fontSize: 20,\n          marginTop: 3,\n          marginBottom: 15\n        },\n        children: userFirstName\n      }), _jsx(View, {\n        children: planningOptions.map(function (shiftElement) {\n          return _jsx(Pressable, {\n            onPress: function onPress() {\n              setShiftChanging(shiftElement);\n              setNewShift(shiftElement, userChangingShift, dayChanging);\n              setShowSideBar(false);\n              usersReload();\n            },\n            children: _jsx(Text, {\n              style: {\n                fontSize: 25,\n                borderWidth: 1,\n                borderRadius: 5,\n                overflow: \"hidden\",\n                width: 50,\n                textAlign: \"center\",\n                marginBottom: 3,\n                backgroundColor: cssColors[shiftElement] !== \"\" ? cssColors[shiftElement] : \"rgb(235, 232, 231)\"\n              },\n              children: shiftElement\n            })\n          });\n        })\n      }), _jsx(Pressable, {\n        onPress: function onPress() {\n          return setShowSideBar(false);\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 25,\n            fontWeight: \"bold\",\n            marginTop: 20\n          },\n          children: \"Close\"\n        })\n      })]\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: styles.globalContainer,\n    children: isLoading === true ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"rgb(110, 116, 170)\",\n      style: {\n        paddingTop: 150\n      }\n    }) : _jsxs(View, {\n      style: {\n        flex: 1\n      },\n      children: [_jsx(View, {\n        style: styles.header,\n        children: _jsx(Pressable, {\n          style: {\n            alignSelf: \"flex-end\",\n            marginRight: 15\n          },\n          onPress: function onPress() {\n            navigation.navigate(\"Settings\");\n          },\n          children: _jsx(Image, {\n            source: require(\"./../assets/icons/settings.png\"),\n            style: styles.svg\n          })\n        })\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          height: 50,\n          alignItems: \"center\",\n          marginTop: 15,\n          marginBottom: 15\n        },\n        children: [_jsx(Image, {\n          source: require(\"./../assets/icons/left-arrow.png\"),\n          style: _objectSpread(_objectSpread({}, styles.svg), {}, {\n            marginRight: 15\n          })\n        }), _jsx(Text, {\n          style: {\n            fontSize: 30,\n            fontWeight: \"bold\"\n          },\n          children: monthState\n        }), _jsx(Image, {\n          source: require(\"./../assets/icons/right-arrow.png\"),\n          style: _objectSpread(_objectSpread({}, styles.svg), {}, {\n            marginLeft: 15\n          })\n        })]\n      }), _jsx(View, {\n        style: {\n          paddingTop: 20,\n          paddingBottom: 20,\n          paddingLeft: 10,\n          paddingRight: 10,\n          backgroundColor: \"rgb(235, 232, 231)\",\n          shadowColor: \"#000\",\n          shadowOffset: {\n            width: 0,\n            height: 2\n          },\n          shadowOpacity: 0.25,\n          shadowRadius: 3.84,\n          elevation: 5\n        },\n        children: _jsxs(ScrollView, {\n          horizontal: true,\n          style: {\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 5\n            },\n            shadowOpacity: 0.34,\n            shadowRadius: 6.27,\n            elevation: 10\n          },\n          children: [_jsxs(View, {\n            children: [_jsx(Text, {\n              style: _objectSpread(_objectSpread({}, styles.user), {}, {\n                opacity: 0\n              }),\n              children: \"\\\" \\\"\"\n            }), users.map(function (el, idx) {\n              return _jsxs(Text, {\n                style: styles.user,\n                children: [el.firstName, \" \", el.lastName.slice(0, 1)]\n              });\n            })]\n          }), _jsx(View, {\n            style: {\n              flexDirection: \"row\"\n            },\n            children: monthIndexDayArray.map(function (day, idx) {\n              return _jsxs(View, {\n                children: [_jsx(Text, {\n                  style: _objectSpread({\n                    backgroundColor: isWeekEnd[idx]\n                  }, styles.case),\n                  children: day.substring(8, 10)\n                }), db.map(function (user) {\n                  return user.shifts.map(function (shft) {\n                    return shft.indexDay === day ? _jsx(Pressable, {\n                      onPress: function onPress() {\n                        if (userContext.isAdmin === true) {\n                          setUserChangingShift(user.email);\n                          setUserFirstName(user.firstName);\n                          setDayChanging(shft.indexDay);\n                          setShowSideBar(true);\n                        }\n                      },\n                      children: _jsx(Text, {\n                        style: _objectSpread(_objectSpread({}, styles.case), {}, {\n                          backgroundColor: cssColors[shft.shift] !== \"\" ? cssColors[shft.shift] : null\n                        }),\n                        children: shft.shift\n                      })\n                    }) : null;\n                  });\n                })]\n              });\n            })\n          })]\n        })\n      }), showSideBar ? _jsx(SideView, {}) : null]\n    })\n  });\n};\n\nexport default PlanningScreen;\nvar styles = StyleSheet.create({\n  globalContainer: {\n    flex: 1,\n    backgroundColor: \"rgb(235, 232, 231)\"\n  },\n  header: {\n    display: \"flex\",\n    height: 65,\n    backgroundColor: \"rgb(235, 232, 231)\",\n    justifyContent: \"center\"\n  },\n  headerTitle: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    color: \"rgb(110, 116, 170)\",\n    alignSelf: \"center\"\n  },\n  headerSubtitle: {\n    fontSize: 17,\n    fontWeight: \"bold\",\n    color: \"rgb(235, 232, 231)\",\n    marginBottom: 10,\n    alignSelf: \"center\"\n  },\n  headerImage: {\n    flex: 1,\n    resizeMode: \"center\",\n    justifyContent: 'center',\n    opacity: 0.7\n  },\n  svg: {\n    height: 30,\n    width: 30\n  },\n  inputsContainer: {\n    flex: 1,\n    justifyContent: \"space-between\",\n    marginTop: 50,\n    marginBottom: 50\n  },\n  viewHolder: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  preTextInput: {\n    fontSize: 17,\n    paddingLeft: 20,\n    alignSelf: \"flex-start\"\n  },\n  button: {\n    backgroundColor: \"rgb(238, 247, 255)\",\n    width: 150,\n    height: 45,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 10,\n    marginTop: 10\n  },\n  buttonText: {\n    fontSize: 20\n  },\n  textInput: {\n    display: \"flex\",\n    backgroundColor: \"white\",\n    width: \"95%\",\n    marginTop: 5,\n    borderRadius: 5,\n    fontSize: 20\n  },\n  user: {\n    fontSize: 20,\n    height: 30,\n    borderRadius: 5,\n    marginBottom: 2,\n    justifyContent: \"center\",\n    overflow: \"hidden\",\n    borderWidth: 1,\n    textAlign: \"right\",\n    paddingRight: 5\n  },\n  case: {\n    fontSize: 20,\n    marginLeft: 5,\n    marginBottom: 2,\n    alignSelf: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 5,\n    width: 37,\n    textAlign: \"center\",\n    height: 30,\n    overflow: \"hidden\"\n  }\n});","map":{"version":3,"sources":["C:/Users/mr b/Desktop/planning-react-native/screens/PlanningScreen.tsx"],"names":["React","useState","useContext","useEffect","SafeAreaView","axios","AsyncStorage","UserContext","URL","backendUrl","cssColors","na","off","am","mid","pm","cp","planningOptions","weekList","monthList","PlanningScreen","navigation","userContext","setUserContext","isLoading","setIsLoading","team","changePasswordPage","setChangePasswordPage","x","y","popUpPosition","setPopUpPosition","showPopUp","setShowPopUp","currentRequestor","setCurrentRequestor","currentIndexDay","setCurrentIndexDay","monthState","setMonthState","passwordErrorMessage","setPasswordErrorMessage","password","passwordConfirm","passwordCurrent","newPasswordValues","setNewPasswordValue","showSideBar","setShowSideBar","usersReload","get","result","filteredResults","data","names","forEach","el","push","firstName","lastName","setUsers","setDb","workingMonth","Date","getMonth","now","daysInThisMonth","getFullYear","getDate","daysInCurrentMonth","currentYear","currentMonth","monthDaysArray","i","monthIndexDayArray","newI","isWeekEnd","day","getDay","users","db","addListener","console","log","generateMonth","isFocus","setToken","value","setItem","message","getToken","getItem","returnValue","logout","loggedIn","isAdmin","email","id","date","month","year","token","localToken","headers","post","response","status","setNewShift","option","requestor","newShift","indexDay","changePassword","put","setTimeout","userChangingShift","setUserChangingShift","shiftChanging","setShiftChanging","dayChanging","setDayChanging","userFirstName","setUserFirstName","SideView","left","top","height","width","position","backgroundColor","paddingTop","paddingLeft","zIndex","elevation","fontSize","fontWeight","marginTop","marginBottom","map","shiftElement","borderWidth","borderRadius","overflow","textAlign","styles","globalContainer","flex","header","alignSelf","marginRight","navigate","require","svg","flexDirection","justifyContent","alignItems","marginLeft","paddingBottom","paddingRight","shadowColor","shadowOffset","shadowOpacity","shadowRadius","user","opacity","idx","slice","case","substring","shifts","shft","shift","StyleSheet","create","display","headerTitle","color","headerSubtitle","headerImage","resizeMode","inputsContainer","viewHolder","preTextInput","button","buttonText","textInput"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useCallback, useMemo } from 'react'\r\nimport { StyleSheet, Text, View, Image, TextInput, Button, Pressable, ImageBackground, ActivityIndicator, ScrollView  } from 'react-native';\r\nimport { CardStyleInterpolators } from 'react-navigation-stack';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { NavigationContext } from 'react-navigation';\r\nimport axios from 'axios';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { withNavigationFocus } from 'react-navigation';\r\n\r\nimport { UserContext } from '../context/UserContext';\r\n\r\nimport URL from '../utils/URL';\r\n\r\nconst backendUrl:string = URL;\r\n\r\nconst cssColors = {\r\n    na: \"rgb(255, 255, 153)\",\r\n    off: \"\",\r\n    am: \"rgb(153, 204, 255)\",\r\n    mid: \"rgb(255, 153, 153)\",\r\n    pm: \"rgb(255, 204, 153)\",\r\n    cp: \"rgb(153, 255, 255)\"\r\n}\r\n\r\nconst planningOptions: string[] = [\"am\", \"mid\", \"pm\", \"off\", \"cp\"];\r\nconst weekList: string[] = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\r\nconst monthList: string[] = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"Decemnber\"];\r\n\r\n\r\nconst PlanningScreen = ({ navigation }) => {\r\n\r\n    const { userContext, setUserContext } = useContext(UserContext);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const team = userContext.team;\r\n    const [changePasswordPage, setChangePasswordPage] = useState(false);\r\n    const [popUpPosition, setPopUpPosition] = useState({x:null, y:null});\r\n    const [showPopUp, setShowPopUp] = useState(false);\r\n    const [currentRequestor, setCurrentRequestor] = useState(\"nobodyyy\");\r\n    const [currentIndexDay, setCurrentIndexDay] = useState(\"noDayYet\");\r\n    const [monthState, setMonthState] = useState(\"\");\r\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState(\"\");\r\n    const [newPasswordValues, setNewPasswordValue] = useState({\r\n        password: \"\",\r\n        passwordConfirm: \"\",\r\n        passwordCurrent: \"\"\r\n    })\r\n    const [showSideBar, setShowSideBar] = useState(false);\r\n\r\n    // Refreshthe page, just like in useEffect\r\n    async function usersReload() {\r\n        const result = await axios.get(`${backendUrl}/api/v1/users/getAllUsers/` + team);\r\n        const filteredResults = result.data.data;\r\n        const names:any = [];\r\n        filteredResults.forEach(el => names.push({firstName: el.firstName, lastName: el.lastName}))\r\n        setUsers(names);\r\n        setDb(filteredResults);\r\n        let workingMonth = (monthList[new Date().getMonth()])\r\n        setMonthState(workingMonth);\r\n        setIsLoading(false);\r\n    }\r\n\r\n    \r\n\r\n\r\n    // Calendar Logic --------------------------------\r\n    var now = new Date();\r\n\r\n    function daysInThisMonth() {\r\n        \r\n        return new Date(now.getFullYear(), now.getMonth()+1, 0).getDate();\r\n      }\r\n\r\n    const daysInCurrentMonth = daysInThisMonth();\r\n    const currentYear = new Date().getFullYear();\r\n    let currentMonth = new Date().getMonth()+1;\r\n    if (currentMonth < 10)\r\n      currentMonth = `0${currentMonth}`;\r\n    else\r\n      currentMonth = `${currentMonth}`;\r\n    let monthDaysArray = [];\r\n    for (let i=1; i<=daysInCurrentMonth; i++) {\r\n        monthDaysArray.push(i);\r\n    }\r\n    let monthIndexDayArray = [];\r\n    for (let i=1; i<=daysInCurrentMonth; i++) {\r\n        var newI;\r\n        if (i < 10) {\r\n            newI = `0${i}`;\r\n        }\r\n        else\r\n        {\r\n            newI = `${i}`;\r\n        }\r\n        \r\n        monthIndexDayArray.push(`${currentYear}-${currentMonth}-${newI}`);\r\n    }\r\n\r\n    let isWeekEnd = [];\r\n    for (let i=1; i<=daysInCurrentMonth; i++)\r\n    {\r\n        let day = new Date(now.getFullYear(), now.getMonth(), i).getDay();\r\n        day === 6 || day === 0 ? isWeekEnd.push(\"rgb(75, 219, 130)\") : isWeekEnd.push(0);\r\n    }\r\n\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [db, setDb] = useState([]);\r\n\r\n    navigation.addListener('didFocus', () => {\r\n            console.log(\"calling generate month from did focus listener\");\r\n            generateMonth();\r\n      });\r\n\r\n    useEffect(() => {\r\n            console.log(\"calling generate month from use effect\");\r\n            generateMonth();\r\n        \r\n    }, [isFocus])\r\n\r\n    // End of calendar logic ----------------------------------------\r\n\r\n\r\n    // Logout function\r\n\r\n    const setToken = async (value) => {\r\n        try {\r\n          await AsyncStorage.setItem('token', value)\r\n        } catch (e) {\r\n          console.log(e.message);\r\n        }\r\n    }\r\n\r\n    const getToken = async (value) => {\r\n        try {\r\n            const returnValue = await AsyncStorage.getItem(value);\r\n            return returnValue;\r\n        } catch (e) {\r\n            console.log(\"error when returning getToken, message : \", e.message);\r\n        }\r\n    }\r\n\r\n    async function logout() {\r\n        await setToken('logOut');\r\n\r\n        setUserContext({\r\n            loggedIn: false,\r\n            isAdmin: false,\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            team: \"\", \r\n            id: \"\"\r\n        });\r\n    }\r\n\r\n    // Generate month\r\n    async function generateMonth() {\r\n        console.log(\"generate month called\")\r\n\r\n        let date = new Date();\r\n        let team = userContext.team;\r\n        let month = date.getMonth()\r\n        let year = date.getFullYear();\r\n        let token = \"Bearer \";\r\n\r\n        try {\r\n            let localToken = await getToken('token');\r\n            token += localToken;\r\n            const headers = {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n              }\r\n\r\n            const response = await axios.post(`${backendUrl}/api/v1/users/generateMonth`, {\r\n                team,\r\n                month,\r\n                year\r\n            }, { headers: headers });\r\n\r\n            if (response.status === 200) //\r\n            {\r\n                \r\n                console.log(\"generate month called success response\")\r\n                usersReload();\r\n            }\r\n                \r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    async function setNewShift(option: String, currentRequestor: String, currentIndexDay: String) {\r\n        let token = \"Bearer \";\r\n        try {\r\n            let localToken = getToken('token');\r\n            token += localToken;\r\n            const headers = {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n              }\r\n\r\n            const response = await axios.post(`${backendUrl}/api/v1/users/requestChangeShift`, {\r\n                requestor: currentRequestor,\r\n                newShift: option,\r\n                indexDay: currentIndexDay\r\n            }, { headers: headers });\r\n\r\n            if (response.status === 200)\r\n            {\r\n                usersReload();\r\n            }\r\n                \r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n    async function changePassword(passwordCurrent: string, password: string, passwordConfirm: string)\r\n    {\r\n        if (password !== passwordConfirm)\r\n        {\r\n            setPasswordErrorMessage(\"Password and confirm don't match moron !\");\r\n            return;\r\n        }\r\n\r\n        if (password === passwordCurrent)\r\n        {\r\n            setPasswordErrorMessage(\"Can't change for the same password stupid !\");\r\n            return;\r\n        }\r\n\r\n        let token = \"Bearer \";\r\n        try {\r\n            let localToken = getToken('token');\r\n            token += localToken;\r\n            const headers = {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n              }\r\n\r\n            const response = await axios.put(`${backendUrl}/api/v1/users/changePassword`, {\r\n                passwordCurrent: newPasswordValues.passwordCurrent,\r\n                password: newPasswordValues.password,\r\n                passwordConfirm: newPasswordValues.passwordConfirm,\r\n                email: userContext.email\r\n            });\r\n\r\n            if (response.status === 200)\r\n            {\r\n                setPasswordErrorMessage(\"Password Changed\");\r\n                setTimeout(() => {\r\n                    setPasswordErrorMessage(\"\");\r\n                }, 500);\r\n            }\r\n\r\n            else {\r\n                setPasswordErrorMessage(\"Something's wrong...\");\r\n            }\r\n                \r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n    // For changing shift\r\n\r\n    const [userChangingShift, setUserChangingShift] = useState(\"\");\r\n    const [shiftChanging, setShiftChanging] = useState(\"\");\r\n    const [dayChanging, setDayChanging] = useState(\"\");\r\n    const [userFirstName, setUserFirstName] = useState(\"\");\r\n\r\n    const SideView = () => {\r\n\r\n        return (<View style={{\r\n            left: 0,\r\n            top: 0,\r\n            height: \"100%\",\r\n            width: 200,\r\n            position: \"absolute\",\r\n            backgroundColor: \"rgb(110, 116, 170)\",\r\n            paddingTop: 50,\r\n            paddingLeft: 15,\r\n            zIndex: 1000,\r\n            elevation: 50\r\n        }}>\r\n            <Text style={{fontSize: 25, fontWeight: \"bold\"}}>Changing shift</Text>\r\n            <Text style={{fontSize: 20, marginTop: 15}}>For user : </Text>\r\n            <Text style={{fontSize: 20, marginTop: 3, marginBottom: 15}}>{userFirstName}</Text>\r\n\r\n            <View>\r\n                {\r\n                    planningOptions.map(shiftElement => {\r\n                        return (\r\n                        <Pressable onPress={() => {\r\n                            setShiftChanging(shiftElement);\r\n                            setNewShift(shiftElement, userChangingShift, dayChanging);\r\n                            setShowSideBar(false);\r\n                            usersReload();\r\n\r\n                        }}>\r\n                            <Text style={{\r\n                                fontSize: 25,\r\n                                borderWidth: 1,\r\n                                borderRadius: 5,\r\n                                overflow: \"hidden\",\r\n                                width: 50,\r\n                                textAlign: \"center\",\r\n                                marginBottom: 3,\r\n                                backgroundColor: cssColors[shiftElement] !== \"\" ? cssColors[shiftElement] : \"rgb(235, 232, 231)\"\r\n                            }}>{shiftElement}</Text>\r\n                        </Pressable>\r\n                        )\r\n                    })\r\n                }\r\n            </View>\r\n            <Pressable onPress={() => setShowSideBar(false)}>\r\n                <Text style={{fontSize: 25, fontWeight: \"bold\", marginTop: 20}}>Close</Text>\r\n            </Pressable>\r\n        </View>)\r\n    }\r\n\r\n    return (\r\n        \r\n        <SafeAreaView style={styles.globalContainer}>\r\n\r\n        {\r\n            (isLoading===true) ? <ActivityIndicator size=\"large\" color=\"rgb(110, 116, 170)\" style={{paddingTop: 150}}/> : \r\n              \r\n            <View style={{flex:1}}>\r\n                {/* Header */}\r\n                <View style={styles.header}>\r\n                    <Pressable \r\n                        style={{alignSelf: \"flex-end\", marginRight: 15}}\r\n                        onPress={() => {navigation.navigate(\"Settings\")}}\r\n                        >\r\n                        <Image source={require('./../assets/icons/settings.png')} style={styles.svg}/>\r\n                    </Pressable>\r\n                </View>\r\n \r\n                {/* Month title */}\r\n                <View style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"center\",\r\n                    height: 50,\r\n                    alignItems: \"center\",\r\n                    marginTop: 15,\r\n                    marginBottom: 15,\r\n                }}>\r\n                    <Image source={require('./../assets/icons/left-arrow.png')} style={{...styles.svg, marginRight: 15}}/>\r\n                    <Text style={{fontSize: 30, fontWeight: \"bold\"}}>{monthState}</Text>\r\n                    <Image source={require('./../assets/icons/right-arrow.png')} style={{...styles.svg, marginLeft: 15}}/>\r\n\r\n                </View>\r\n\r\n                {/* Main Planning Box */}\r\n                <View style ={{\r\n                    // flex: 1,\r\n                    paddingTop: 20,\r\n                    paddingBottom: 20,\r\n                    paddingLeft: 10,\r\n                    paddingRight: 10,\r\n                    backgroundColor: \"rgb(235, 232, 231)\",\r\n\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: {\r\n                        width: 0,\r\n                        height: 2,\r\n                    },\r\n                    shadowOpacity: 0.25,\r\n                    shadowRadius: 3.84,\r\n                    \r\n                    elevation: 5,\r\n                }}>\r\n                <ScrollView horizontal={true} style={{\r\n                    shadowColor: \"#000\",\r\n                    shadowOffset: {\r\n                        width: 0,\r\n                        height: 5,\r\n                    },\r\n                    shadowOpacity: 0.34,\r\n                    shadowRadius: 6.27,\r\n                    \r\n                    elevation: 10,\r\n                }}>\r\n                    <View>\r\n                        <Text style={{...styles.user, opacity: 0}}>\" \"</Text>\r\n                        {\r\n                            users.map((el, idx) => {\r\n                                // Returning users list for the given team\r\n                                return(<Text style={styles.user}>{el.firstName} {el.lastName.slice(0, 1)}</Text>)\r\n                            })\r\n                        }\r\n                    </View>\r\n                    <View style={{flexDirection: \"row\"}}>\r\n                    {\r\n                        monthIndexDayArray.map((day, idx) => {\r\n                            return (\r\n                            // Planning Box\r\n                                <View>\r\n                                    <Text style={{backgroundColor: isWeekEnd[idx], ...styles.case}}>{day.substring(8, 10)}</Text>\r\n                                    {\r\n                                        db.map(user =>\r\n                                            user.shifts.map(shft=> \r\n                                                shft.indexDay === day ?\r\n                                                <Pressable onPress={() => {\r\n                                                    if (userContext.isAdmin === true )\r\n                                                    {\r\n                                                    setUserChangingShift(user.email);\r\n                                                    setUserFirstName(user.firstName);\r\n                                                    setDayChanging(shft.indexDay);\r\n                                                    setShowSideBar(true);\r\n                                                    }\r\n                                                }}>\r\n                                                    <Text style={{...styles.case, backgroundColor: cssColors[shft.shift] !== \"\" ? cssColors[shft.shift] : null}}>{shft.shift}</Text>\r\n                                                </Pressable>\r\n                                                : null\r\n                                            ))\r\n                                    }\r\n                                </View>)\r\n                        })\r\n                    }\r\n                    </View>\r\n                </ScrollView>\r\n                </View>\r\n\r\n                {/* Side pop up for changing shift */}\r\n                {\r\n                    showSideBar ? <SideView /> : null\r\n                }\r\n                \r\n                \r\n                \r\n            </View>\r\n\r\n        }\r\n            \r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default PlanningScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    globalContainer: {\r\n        flex: 1,\r\n        backgroundColor: \"rgb(235, 232, 231)\",\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        height: 65,\r\n        backgroundColor: \"rgb(235, 232, 231)\",\r\n        justifyContent: \"center\"\r\n    },\r\n    headerTitle: {\r\n        fontSize: 30,\r\n        fontWeight: \"bold\",\r\n        color: \"rgb(110, 116, 170)\",\r\n        // marginTop: 50,\r\n        // marginBottom: 15,\r\n        alignSelf: \"center\"\r\n    },\r\n    headerSubtitle: {\r\n        fontSize: 17,\r\n        fontWeight: \"bold\",\r\n        color: \"rgb(235, 232, 231)\",\r\n        marginBottom: 10,\r\n        alignSelf: \"center\"\r\n\r\n    },\r\n    headerImage: {\r\n        flex: 1,\r\n        resizeMode: \"center\",\r\n        justifyContent: 'center',\r\n        opacity: 0.7\r\n    },\r\n    svg: {\r\n        height: 30,\r\n        width: 30\r\n    },\r\n    inputsContainer: {\r\n        flex: 1,\r\n        justifyContent: \"space-between\",\r\n        marginTop: 50,\r\n        marginBottom: 50,\r\n    },\r\n    viewHolder: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    },\r\n    preTextInput: {\r\n        fontSize: 17,\r\n        paddingLeft: 20,\r\n        alignSelf: \"flex-start\",\r\n    },\r\n    button: {\r\n        backgroundColor: \"rgb(238, 247, 255)\",\r\n        width: 150,\r\n        height: 45,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        borderRadius: 10,\r\n        marginTop: 10,\r\n    },\r\n    buttonText: {\r\n        fontSize: 20\r\n    },\r\n    textInput: {\r\n        display: \"flex\",\r\n        backgroundColor: \"white\",\r\n        width: \"95%\",\r\n        marginTop: 5,\r\n        borderRadius: 5,\r\n        fontSize: 20\r\n    },\r\n    user: {\r\n        fontSize: 20,\r\n        height: 30,\r\n        // backgroundColor: \"rgb(110, 116, 170)\",\r\n        borderRadius: 5,\r\n        marginBottom: 2,\r\n        // alignSelf: \"flex-end\",\r\n        justifyContent: \"center\",\r\n        overflow: \"hidden\", // Fixing border radius not working\r\n        borderWidth: 1,\r\n        textAlign: \"right\",\r\n        paddingRight: 5\r\n\r\n    },\r\n    case: {\r\n        fontSize: 20,\r\n        marginLeft: 5,\r\n        marginBottom: 2,\r\n        alignSelf: \"center\",\r\n        justifyContent: \"center\",\r\n        borderRadius: 5,\r\n        width: 37,\r\n        textAlign: \"center\",\r\n        height: 30,\r\n        overflow: \"hidden\" // Fixing border radius not working\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}