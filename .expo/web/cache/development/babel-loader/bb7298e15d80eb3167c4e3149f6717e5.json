{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { UserContext } from \"../context/UserContext\";\nimport URL from \"../utils/URL\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar backendUrl = URL;\nvar cssColors = {\n  na: \"rgb(255, 255, 153)\",\n  off: \"\",\n  am: \"rgb(153, 204, 255)\",\n  mid: \"rgb(255, 153, 153)\",\n  pm: \"rgb(255, 204, 153)\",\n  cp: \"rgb(153, 255, 255)\"\n};\nvar planningOptions = [\"am\", \"mid\", \"pm\", \"off\", \"cp\"];\nvar weekList = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\nvar monthList = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"Decemnber\"];\n\nvar PlanningScreen = function PlanningScreen(_ref) {\n  var any = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      userContext = _useContext.userContext,\n      setUserContext = _useContext.setUserContext;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var team = userContext.team;\n  var PageElements;\n\n  (function (PageElements) {\n    PageElements[PageElements[\"planning\"] = 0] = \"planning\";\n    PageElements[PageElements[\"userProfile\"] = 1] = \"userProfile\";\n  })(PageElements || (PageElements = {}));\n\n  var _useState3 = useState(PageElements.planning),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentElement = _useState4[0],\n      setCurrentElement = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      changePasswordPage = _useState6[0],\n      setChangePasswordPage = _useState6[1];\n\n  var _useState7 = useState({\n    x: null,\n    y: null\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      popUpPosition = _useState8[0],\n      setPopUpPosition = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showPopUp = _useState10[0],\n      setShowPopUp = _useState10[1];\n\n  var _useState11 = useState(\"nobodyyy\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      currentRequestor = _useState12[0],\n      setCurrentRequestor = _useState12[1];\n\n  var _useState13 = useState(\"noDayYet\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      currentIndexDay = _useState14[0],\n      setCurrentIndexDay = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      monthState = _useState16[0],\n      setMonthState = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      passwordErrorMessage = _useState18[0],\n      setPasswordErrorMessage = _useState18[1];\n\n  var _useState19 = useState({\n    password: \"\",\n    passwordConfirm: \"\",\n    passwordCurrent: \"\"\n  }),\n      _useState20 = _slicedToArray(_useState19, 2),\n      newPasswordValues = _useState20[0],\n      setNewPasswordValue = _useState20[1];\n\n  function usersReload() {\n    var result, filteredResults, names, workingMonth;\n    return _regeneratorRuntime.async(function usersReload$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(backendUrl + \"/api/v1/users/getAllUsers/\" + team));\n\n          case 2:\n            result = _context.sent;\n            filteredResults = result.data.data;\n            names = [];\n            filteredResults.forEach(function (el) {\n              return names.push({\n                firstName: el.firstName,\n                lastName: el.lastName\n              });\n            });\n            setUsers(names);\n            setDb(filteredResults);\n            workingMonth = monthList[new Date().getMonth()];\n            setMonthState(workingMonth);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var now = new Date();\n\n  function daysInThisMonth() {\n    return new Date(now.getFullYear(), now.getMonth() + 1, 0).getDate();\n  }\n\n  var daysInCurrentMonth = daysInThisMonth();\n  var currentYear = new Date().getFullYear();\n  var currentMonth = new Date().getMonth() + 1;\n  if (currentMonth < 10) currentMonth = \"0\" + currentMonth;else currentMonth = \"\" + currentMonth;\n  var monthDaysArray = [];\n\n  for (var i = 1; i <= daysInCurrentMonth; i++) {\n    monthDaysArray.push(i);\n  }\n\n  var monthIndexDayArray = [];\n\n  for (var _i = 1; _i <= daysInCurrentMonth; _i++) {\n    var newI;\n\n    if (_i < 10) {\n      newI = \"0\" + _i;\n    } else {\n      newI = \"\" + _i;\n    }\n\n    monthIndexDayArray.push(currentYear + \"-\" + currentMonth + \"-\" + newI);\n  }\n\n  var isWeekEnd = [];\n\n  for (var _i2 = 1; _i2 <= daysInCurrentMonth; _i2++) {\n    var day = new Date(now.getFullYear(), now.getMonth(), _i2).getDay();\n    day === 6 || day === 0 ? isWeekEnd.push(\"rgb(75, 219, 130)\") : isWeekEnd.push(0);\n  }\n\n  console.log(isWeekEnd);\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      users = _useState22[0],\n      setUsers = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      db = _useState24[0],\n      setDb = _useState24[1];\n\n  useEffect(function () {\n    generateMonth();\n  }, []);\n\n  var setToken = function setToken(value) {\n    return _regeneratorRuntime.async(function setToken$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', value));\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0.message);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var getToken = function getToken(value) {\n    var returnValue;\n    return _regeneratorRuntime.async(function getToken$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(value));\n\n          case 3:\n            returnValue = _context3.sent;\n            return _context3.abrupt(\"return\", returnValue);\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(\"error when returning getToken, message : \", _context3.t0.message);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  function logout() {\n    return _regeneratorRuntime.async(function logout$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(setToken('logOut'));\n\n          case 2:\n            setUserContext({\n              loggedIn: false,\n              isAdmin: false,\n              firstName: \"\",\n              lastName: \"\",\n              email: \"\",\n              team: \"\",\n              id: \"\"\n            });\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function generateMonth() {\n    var date, team, month, year, token, localToken, headers, response;\n    return _regeneratorRuntime.async(function generateMonth$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            date = new Date();\n            team = userContext.team;\n            month = date.getMonth();\n            year = date.getFullYear();\n            token = \"Bearer \";\n            _context5.prev = 5;\n            _context5.next = 8;\n            return _regeneratorRuntime.awrap(getToken('token'));\n\n          case 8:\n            localToken = _context5.sent;\n            token += localToken;\n            headers = {\n              'Content-Type': 'application/json',\n              'Authorization': token\n            };\n            _context5.next = 13;\n            return _regeneratorRuntime.awrap(axios.post(backendUrl + \"/api/v1/users/generateMonth\", {\n              team: team,\n              month: month,\n              year: year\n            }, {\n              headers: headers\n            }));\n\n          case 13:\n            response = _context5.sent;\n\n            if (response.status === 200) {\n                usersReload();\n              }\n\n            _context5.next = 20;\n            break;\n\n          case 17:\n            _context5.prev = 17;\n            _context5.t0 = _context5[\"catch\"](5);\n            console.log(_context5.t0.message);\n\n          case 20:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[5, 17]], Promise);\n  }\n\n  function setNewShift(option, currentRequestor, currentIndexDay) {\n    var token, localToken, headers, response;\n    return _regeneratorRuntime.async(function setNewShift$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            token = \"Bearer \";\n            _context6.prev = 1;\n            localToken = getToken('token');\n            token += localToken;\n            headers = {\n              'Content-Type': 'application/json',\n              'Authorization': token\n            };\n            _context6.next = 7;\n            return _regeneratorRuntime.awrap(axios.post(backendUrl + \"/api/v1/users/requestChangeShift\", {\n              requestor: currentRequestor,\n              newShift: option,\n              indexDay: currentIndexDay\n            }, {\n              headers: headers\n            }));\n\n          case 7:\n            response = _context6.sent;\n\n            if (response.status === 200) {\n              usersReload();\n            }\n\n            _context6.next = 14;\n            break;\n\n          case 11:\n            _context6.prev = 11;\n            _context6.t0 = _context6[\"catch\"](1);\n            console.log(_context6.t0.message);\n\n          case 14:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, [[1, 11]], Promise);\n  }\n\n  function changePassword(passwordCurrent, password, passwordConfirm) {\n    var token, localToken, headers, response;\n    return _regeneratorRuntime.async(function changePassword$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            if (!(password !== passwordConfirm)) {\n              _context7.next = 3;\n              break;\n            }\n\n            setPasswordErrorMessage(\"Password and confirm don't match moron !\");\n            return _context7.abrupt(\"return\");\n\n          case 3:\n            if (!(password === passwordCurrent)) {\n              _context7.next = 6;\n              break;\n            }\n\n            setPasswordErrorMessage(\"Can't change for the same password stupid !\");\n            return _context7.abrupt(\"return\");\n\n          case 6:\n            token = \"Bearer \";\n            _context7.prev = 7;\n            localToken = getToken('token');\n            token += localToken;\n            headers = {\n              'Content-Type': 'application/json',\n              'Authorization': token\n            };\n            _context7.next = 13;\n            return _regeneratorRuntime.awrap(axios.put(backendUrl + \"/api/v1/users/changePassword\", {\n              passwordCurrent: newPasswordValues.passwordCurrent,\n              password: newPasswordValues.password,\n              passwordConfirm: newPasswordValues.passwordConfirm,\n              email: userContext.email\n            }));\n\n          case 13:\n            response = _context7.sent;\n\n            if (response.status === 200) {\n              setPasswordErrorMessage(\"Password Changed\");\n              setTimeout(function () {\n                setPasswordErrorMessage(\"\");\n              }, 500);\n            } else {\n              setPasswordErrorMessage(\"Something's wrong...\");\n            }\n\n            _context7.next = 20;\n            break;\n\n          case 17:\n            _context7.prev = 17;\n            _context7.t0 = _context7[\"catch\"](7);\n            console.log(_context7.t0.message);\n\n          case 20:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, [[7, 17]], Promise);\n  }\n\n  return _jsx(SafeAreaView, {\n    style: styles.globalContainer,\n    children: isLoading === true ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"rgb(235, 232, 231)\",\n      style: {\n        paddingTop: 150\n      }\n    }) : _jsxs(View, {\n      style: {\n        flex: 1\n      },\n      children: [_jsx(View, {\n        style: styles.header,\n        children: _jsx(Pressable, {\n          style: {\n            alignSelf: \"flex-end\",\n            marginRight: 15\n          },\n          children: _jsx(Image, {\n            source: require(\"./../assets/icons/settings.png\"),\n            style: styles.svg\n          })\n        })\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          height: 50,\n          alignItems: \"center\",\n          marginTop: 15,\n          marginBottom: 15\n        },\n        children: [_jsx(Image, {\n          source: require(\"./../assets/icons/left-arrow.png\"),\n          style: _objectSpread(_objectSpread({}, styles.svg), {}, {\n            marginRight: 15\n          })\n        }), _jsx(Text, {\n          style: {\n            fontSize: 30,\n            fontWeight: \"bold\"\n          },\n          children: monthState\n        }), _jsx(Image, {\n          source: require(\"./../assets/icons/right-arrow.png\"),\n          style: _objectSpread(_objectSpread({}, styles.svg), {}, {\n            marginLeft: 15\n          })\n        })]\n      }), _jsxs(ScrollView, {\n        horizontal: true,\n        children: [_jsxs(View, {\n          children: [_jsx(Text, {\n            style: _objectSpread(_objectSpread({}, styles.user), {}, {\n              opacity: 0\n            })\n          }), users.map(function (el, idx) {\n            return _jsxs(Text, {\n              style: styles.user,\n              children: [el.firstName, \" \", el.lastName.slice(0, 1)]\n            });\n          })]\n        }), _jsx(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: monthIndexDayArray.map(function (day, idx) {\n            return _jsxs(View, {\n              children: [_jsx(Text, {\n                style: _objectSpread({\n                  backgroundColor: isWeekEnd[idx]\n                }, styles.case),\n                children: day.substring(8, 10)\n              }), db.map(function (user) {\n                return user.shifts.map(function (shft) {\n                  return shft.indexDay === day ? _jsx(Pressable, {\n                    children: _jsx(Text, {\n                      style: styles.case,\n                      children: shft.shift\n                    })\n                  }) : null;\n                });\n              })]\n            });\n          })\n        })]\n      })]\n    })\n  });\n};\n\nexport default PlanningScreen;\nvar styles = StyleSheet.create({\n  globalContainer: {\n    flex: 1,\n    backgroundColor: \"rgb(110, 116, 170)\"\n  },\n  header: {\n    display: \"flex\",\n    height: 65,\n    backgroundColor: \"rgb(235, 232, 231)\",\n    justifyContent: \"center\"\n  },\n  headerTitle: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    color: \"rgb(110, 116, 170)\",\n    alignSelf: \"center\"\n  },\n  headerSubtitle: {\n    fontSize: 17,\n    fontWeight: \"bold\",\n    color: \"rgb(235, 232, 231)\",\n    marginBottom: 10,\n    alignSelf: \"center\"\n  },\n  headerImage: {\n    flex: 1,\n    resizeMode: \"center\",\n    justifyContent: 'center',\n    opacity: 0.7\n  },\n  svg: {\n    height: 30,\n    width: 30\n  },\n  inputsContainer: {\n    flex: 1,\n    justifyContent: \"space-between\",\n    marginTop: 50,\n    marginBottom: 50\n  },\n  viewHolder: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  preTextInput: {\n    fontSize: 17,\n    paddingLeft: 20,\n    alignSelf: \"flex-start\"\n  },\n  button: {\n    backgroundColor: \"rgb(238, 247, 255)\",\n    width: 150,\n    height: 45,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 10,\n    marginTop: 10\n  },\n  buttonText: {\n    fontSize: 20\n  },\n  textInput: {\n    display: \"flex\",\n    backgroundColor: \"white\",\n    width: \"95%\",\n    marginTop: 5,\n    borderRadius: 5,\n    fontSize: 20\n  },\n  user: {\n    fontSize: 20,\n    backgroundColor: \"rgb(110, 116, 170)\",\n    borderRadius: 5,\n    marginBottom: 2\n  },\n  case: {\n    fontSize: 20,\n    marginLeft: 5,\n    marginBottom: 2\n  }\n});","map":{"version":3,"sources":["/Users/bastien/Desktop/planning-react-native/screens/PlanningScreen.tsx"],"names":["React","useState","useContext","useEffect","SafeAreaView","axios","AsyncStorage","UserContext","URL","backendUrl","cssColors","na","off","am","mid","pm","cp","planningOptions","weekList","monthList","PlanningScreen","any","navigation","userContext","setUserContext","isLoading","setIsLoading","team","PageElements","planning","currentElement","setCurrentElement","changePasswordPage","setChangePasswordPage","x","y","popUpPosition","setPopUpPosition","showPopUp","setShowPopUp","currentRequestor","setCurrentRequestor","currentIndexDay","setCurrentIndexDay","monthState","setMonthState","passwordErrorMessage","setPasswordErrorMessage","password","passwordConfirm","passwordCurrent","newPasswordValues","setNewPasswordValue","usersReload","get","result","filteredResults","data","names","forEach","el","push","firstName","lastName","setUsers","setDb","workingMonth","Date","getMonth","now","daysInThisMonth","getFullYear","getDate","daysInCurrentMonth","currentYear","currentMonth","monthDaysArray","i","monthIndexDayArray","newI","isWeekEnd","day","getDay","console","log","users","db","generateMonth","setToken","value","setItem","message","getToken","getItem","returnValue","logout","loggedIn","isAdmin","email","id","date","month","year","token","localToken","headers","post","response","status","setNewShift","option","requestor","newShift","indexDay","changePassword","put","setTimeout","styles","globalContainer","paddingTop","flex","header","alignSelf","marginRight","require","svg","flexDirection","justifyContent","height","alignItems","marginTop","marginBottom","fontSize","fontWeight","marginLeft","user","opacity","map","idx","slice","backgroundColor","case","substring","shifts","shft","shift","StyleSheet","create","display","headerTitle","color","headerSubtitle","headerImage","resizeMode","width","inputsContainer","viewHolder","preTextInput","paddingLeft","button","borderRadius","buttonText","textInput"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { StyleSheet, Text, View, Image, TextInput, Button, Pressable, ImageBackground, ActivityIndicator, ScrollView  } from 'react-native';\nimport { CardStyleInterpolators } from 'react-navigation-stack';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { NavigationContext } from 'react-navigation';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport { UserContext } from '../context/UserContext';\n\nimport URL from '../utils/URL';\n\nconst backendUrl:string = URL;\n\n// Icons\nimport settingsIcon from './../assets/icons/settingsIcon';\n\nconst cssColors = {\n    na: \"rgb(255, 255, 153)\",\n    off: \"\",\n    am: \"rgb(153, 204, 255)\",\n    mid: \"rgb(255, 153, 153)\",\n    pm: \"rgb(255, 204, 153)\",\n    cp: \"rgb(153, 255, 255)\"\n}\n\nconst planningOptions: string[] = [\"am\", \"mid\", \"pm\", \"off\", \"cp\"];\nconst weekList: string[] = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\nconst monthList: string[] = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"Decemnber\"];\n\n\nconst PlanningScreen = ({ navigation:any }) => {\n\n    const { userContext, setUserContext } = useContext(UserContext);\n\n    const [isLoading, setIsLoading] = useState(false);\n\n    // If the user comes here without being logged in...get him tf out ! =)\n\n    // if (userContext.loggedIn === false)\n    //     navigation.navigate('Home');\n\n    const team = userContext.team;\n\n    // Different Elements to show user\n\n    enum PageElements {\n        planning,\n        userProfile\n    }\n\n    const [currentElement, setCurrentElement] = useState(PageElements.planning);\n    const [changePasswordPage, setChangePasswordPage] = useState(false);\n    const [popUpPosition, setPopUpPosition] = useState({x:null, y:null});\n    const [showPopUp, setShowPopUp] = useState(false);\n    const [currentRequestor, setCurrentRequestor] = useState(\"nobodyyy\");\n    const [currentIndexDay, setCurrentIndexDay] = useState(\"noDayYet\");\n    const [monthState, setMonthState] = useState(\"\");\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState(\"\");\n    const [newPasswordValues, setNewPasswordValue] = useState({\n        password: \"\",\n        passwordConfirm: \"\",\n        passwordCurrent: \"\"\n    })\n\n    // Refreshthe page, just like in useEffect\n    async function usersReload() {\n        const result = await axios.get(`${backendUrl}/api/v1/users/getAllUsers/` + team);\n        const filteredResults = result.data.data;\n        const names:any = [];\n        filteredResults.forEach(el => names.push({firstName: el.firstName, lastName: el.lastName}))\n        setUsers(names);\n        setDb(filteredResults);\n        let workingMonth = (monthList[new Date().getMonth()])\n        setMonthState(workingMonth);\n    }\n\n    \n\n\n    // Calendar Logic --------------------------------\n    var now = new Date();\n\n    function daysInThisMonth() {\n        \n        return new Date(now.getFullYear(), now.getMonth()+1, 0).getDate();\n      }\n\n    const daysInCurrentMonth = daysInThisMonth();\n    const currentYear = new Date().getFullYear();\n    let currentMonth = new Date().getMonth()+1;\n    if (currentMonth < 10)\n      currentMonth = `0${currentMonth}`;\n    else\n      currentMonth = `${currentMonth}`;\n    let monthDaysArray = [];\n    for (let i=1; i<=daysInCurrentMonth; i++) {\n        monthDaysArray.push(i);\n    }\n    let monthIndexDayArray = [];\n    for (let i=1; i<=daysInCurrentMonth; i++) {\n        var newI;\n        if (i < 10) {\n            newI = `0${i}`;\n        }\n        else\n        {\n            newI = `${i}`;\n        }\n        \n        monthIndexDayArray.push(`${currentYear}-${currentMonth}-${newI}`);\n    }\n\n    let isWeekEnd = [];\n    for (let i=1; i<=daysInCurrentMonth; i++)\n    {\n        let day = new Date(now.getFullYear(), now.getMonth(), i).getDay();\n        day === 6 || day === 0 ? isWeekEnd.push(\"rgb(75, 219, 130)\") : isWeekEnd.push(0);\n    }\n\n    console.log(isWeekEnd);\n\n\n    const [users, setUsers] = useState([]);\n    const [db, setDb] = useState([]);\n\n    useEffect(() => {\n        generateMonth();\n    }, [])\n\n    // End of calendar logic ----------------------------------------\n\n\n    // Logout function\n\n    const setToken = async (value) => {\n        try {\n          await AsyncStorage.setItem('token', value)\n        } catch (e) {\n          console.log(e.message);\n        }\n    }\n\n    const getToken = async (value) => {\n        try {\n            const returnValue = await AsyncStorage.getItem(value);\n            return returnValue;\n        } catch (e) {\n            console.log(\"error when returning getToken, message : \", e.message);\n        }\n    }\n\n    async function logout() {\n        await setToken('logOut');\n\n        setUserContext({\n            loggedIn: false,\n            isAdmin: false,\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            team: \"\", \n            id: \"\"\n        });\n    }\n\n    // Generate month\n    async function generateMonth() {\n        let date = new Date();\n        let team = userContext.team;\n        let month = date.getMonth()\n        let year = date.getFullYear();\n        let token = \"Bearer \";\n\n        try {\n            let localToken = await getToken('token');\n            token += localToken;\n            const headers = {\n                'Content-Type': 'application/json',\n                'Authorization': token\n              }\n\n            const response = await axios.post(`${backendUrl}/api/v1/users/generateMonth`, {\n                team,\n                month,\n                year\n            }, { headers: headers });\n\n            if (response.status === 200) //\n            {\n                \n        \n                usersReload();\n            }\n                \n        } catch (e) {\n            console.log(e.message)\n        }\n\n        \n    }\n\n    async function setNewShift(option: String, currentRequestor: String, currentIndexDay: String) {\n        let token = \"Bearer \";\n        try {\n            let localToken = getToken('token');\n            token += localToken;\n            const headers = {\n                'Content-Type': 'application/json',\n                'Authorization': token\n              }\n\n            const response = await axios.post(`${backendUrl}/api/v1/users/requestChangeShift`, {\n                requestor: currentRequestor,\n                newShift: option,\n                indexDay: currentIndexDay\n            }, { headers: headers });\n\n            if (response.status === 200)\n            {\n                usersReload();\n            }\n                \n        } catch (e) {\n            console.log(e.message)\n        }\n    }\n\n    async function changePassword(passwordCurrent: string, password: string, passwordConfirm: string)\n    {\n        if (password !== passwordConfirm)\n        {\n            setPasswordErrorMessage(\"Password and confirm don't match moron !\");\n            return;\n        }\n\n        if (password === passwordCurrent)\n        {\n            setPasswordErrorMessage(\"Can't change for the same password stupid !\");\n            return;\n        }\n\n        let token = \"Bearer \";\n        try {\n            let localToken = getToken('token');\n            token += localToken;\n            const headers = {\n                'Content-Type': 'application/json',\n                'Authorization': token\n              }\n\n            const response = await axios.put(`${backendUrl}/api/v1/users/changePassword`, {\n                passwordCurrent: newPasswordValues.passwordCurrent,\n                password: newPasswordValues.password,\n                passwordConfirm: newPasswordValues.passwordConfirm,\n                email: userContext.email\n            });\n\n            if (response.status === 200)\n            {\n                setPasswordErrorMessage(\"Password Changed\");\n                setTimeout(() => {\n                    setPasswordErrorMessage(\"\");\n                }, 500);\n            }\n\n            else {\n                setPasswordErrorMessage(\"Something's wrong...\");\n            }\n                \n        } catch (e) {\n            console.log(e.message)\n        }\n    }\n\n    return (\n        \n        <SafeAreaView style={styles.globalContainer}>\n\n        {\n            (isLoading===true) ? <ActivityIndicator size=\"large\" color=\"rgb(235, 232, 231)\" style={{paddingTop: 150}}/> : \n              \n            <View style={{flex:1}}>\n                {/* Header */}\n                <View style={styles.header}>\n                    <Pressable style={{alignSelf: \"flex-end\", marginRight: 15}}>\n                        <Image source={require('./../assets/icons/settings.png')} style={styles.svg}/>\n                    </Pressable>\n                </View>\n \n                {/* Month title */}\n                <View style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"center\",\n                    height: 50,\n                    alignItems: \"center\",\n                    marginTop: 15,\n                    marginBottom: 15\n                }}>\n                    <Image source={require('./../assets/icons/left-arrow.png')} style={{...styles.svg, marginRight: 15}}/>\n                    <Text style={{fontSize: 30, fontWeight: \"bold\"}}>{monthState}</Text>\n                    <Image source={require('./../assets/icons/right-arrow.png')} style={{...styles.svg, marginLeft: 15}}/>\n\n                </View>\n\n                {/* Main Planning Box */}\n                <ScrollView horizontal={true}>\n                    <View>\n                        <Text style={{...styles.user, opacity: 0}}></Text>\n                        {\n                            users.map((el, idx) => {\n                                // Returning users list for the given team\n                                return(<Text style={styles.user}>{el.firstName} {el.lastName.slice(0, 1)}</Text>)\n                            })\n                        }\n                    </View>\n                    <View style={{flexDirection: \"row\"}}>\n                    {\n                        monthIndexDayArray.map((day, idx) => {\n                            return (\n                            // Planning Box\n                                <View>\n                                    <Text style={{backgroundColor: isWeekEnd[idx], ...styles.case}}>{day.substring(8, 10)}</Text>\n                                    {\n                                        db.map(user =>\n                                            user.shifts.map(shft=> \n                                                shft.indexDay === day ?\n                                                <Pressable>\n                                                    <Text style={styles.case}>{shft.shift}</Text>\n                                                </Pressable>\n                                                : null\n                                            ))\n                                    }\n                                </View>)\n                        })\n                    }\n                    </View>\n                </ScrollView>\n            </View>\n\n        }\n            \n        </SafeAreaView>\n    )\n}\n\nexport default PlanningScreen\n\nconst styles = StyleSheet.create({\n    globalContainer: {\n        flex: 1,\n        backgroundColor: \"rgb(110, 116, 170)\",\n    },\n    header: {\n        display: \"flex\",\n        height: 65,\n        backgroundColor: \"rgb(235, 232, 231)\",\n        justifyContent: \"center\"\n    },\n    headerTitle: {\n        fontSize: 30,\n        fontWeight: \"bold\",\n        color: \"rgb(110, 116, 170)\",\n        // marginTop: 50,\n        // marginBottom: 15,\n        alignSelf: \"center\"\n    },\n    headerSubtitle: {\n        fontSize: 17,\n        fontWeight: \"bold\",\n        color: \"rgb(235, 232, 231)\",\n        marginBottom: 10,\n        alignSelf: \"center\"\n\n    },\n    headerImage: {\n        flex: 1,\n        resizeMode: \"center\",\n        justifyContent: 'center',\n        opacity: 0.7\n    },\n    svg: {\n        height: 30,\n        width: 30\n    },\n    inputsContainer: {\n        flex: 1,\n        justifyContent: \"space-between\",\n        marginTop: 50,\n        marginBottom: 50,\n    },\n    viewHolder: {\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    preTextInput: {\n        fontSize: 17,\n        paddingLeft: 20,\n        alignSelf: \"flex-start\",\n    },\n    button: {\n        backgroundColor: \"rgb(238, 247, 255)\",\n        width: 150,\n        height: 45,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        borderRadius: 10,\n        marginTop: 10,\n    },\n    buttonText: {\n        fontSize: 20\n    },\n    textInput: {\n        display: \"flex\",\n        backgroundColor: \"white\",\n        width: \"95%\",\n        marginTop: 5,\n        borderRadius: 5,\n        fontSize: 20\n    },\n    user: {\n        fontSize: 20,\n        backgroundColor: \"rgb(110, 116, 170)\",\n        borderRadius: 5,\n        marginBottom: 2,\n    },\n    case: {\n        fontSize: 20,\n        marginLeft: 5,\n        marginBottom: 2\n    }\n})\n"]},"metadata":{},"sourceType":"module"}