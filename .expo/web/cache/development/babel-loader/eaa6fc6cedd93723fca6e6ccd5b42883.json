{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useContext, useMemo } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createAppContainer } from \"react-navigation\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport 'react-native-gesture-handler';\nimport { UserContext, UserState } from \"./context/UserContext\";\nimport LoginScreen from \"./screens/LoginScreen.jsx\";\nimport NewTeamScreen from \"./screens/NewTeamScreen\";\nimport SuccessfullScreen from \"./screens/SuccessfullScreen\";\nimport PlanningScreen from \"./screens/PlanningScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar StackNavigator = createStackNavigator({\n  Login: LoginScreen,\n  NewTeam: NewTeamScreen,\n  Successfull: SuccessfullScreen,\n  Planning: PlanningScreen\n}, {\n  initialRouteName: \"Planning\",\n  headerMode: \"none\"\n});\nvar Routes = createAppContainer(StackNavigator);\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      userContext = _useState2[0],\n      setUserContext = _useState2[1];\n\n  var value = useMemo(function () {\n    return {\n      userContext: userContext,\n      setUserContext: setUserContext\n    };\n  }, [userContext, setUserContext]);\n  return _jsx(UserContext.Provider, {\n    value: value,\n    children: _jsx(Routes, {})\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/mr b/Desktop/planning-react-native/App.jsx"],"names":["StatusBar","React","useState","useContext","useMemo","createAppContainer","createStackNavigator","UserContext","UserState","LoginScreen","NewTeamScreen","SuccessfullScreen","PlanningScreen","StackNavigator","Login","NewTeam","Successfull","Planning","initialRouteName","headerMode","Routes","App","userContext","setUserContext","value","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,OAAtC,QAAqD,OAArD;;;;AAEA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AAEA,OAAO,8BAAP;AAEA,SAASC,WAAT,EAAsBC,SAAtB;AAEA,OAAOC,WAAP;AACA,OAAOC,aAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,cAAP;;AAEA,IAAMC,cAAc,GAAGP,oBAAoB,CACzC;AACEQ,EAAAA,KAAK,EAAGL,WADV;AAEEM,EAAAA,OAAO,EAAEL,aAFX;AAGEM,EAAAA,WAAW,EAAEL,iBAHf;AAIEM,EAAAA,QAAQ,EAAEL;AAJZ,CADyC,EAOzC;AACEM,EAAAA,gBAAgB,EAAE,UADpB;AAEEC,EAAAA,UAAU,EAAE;AAFd,CAPyC,CAA3C;AAaA,IAAMC,MAAM,GAAGf,kBAAkB,CAACQ,cAAD,CAAjC;AAEA,eAAe,SAASQ,GAAT,GAAe;AAE5B,kBAAsCnB,QAAQ,CAAC,IAAD,CAA9C;AAAA;AAAA,MAAOoB,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,KAAK,GAAGpB,OAAO,CAAC;AAAA,WAAO;AAAEkB,MAAAA,WAAW,EAAXA,WAAF;AAAeC,MAAAA,cAAc,EAAdA;AAAf,KAAP;AAAA,GAAD,EAA0C,CAACD,WAAD,EAAcC,cAAd,CAA1C,CAArB;AAGA,SACE,KAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,KAA7B;AAAA,cACE,KAAC,MAAD;AADF,IADF;AAMD;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState, useContext, useMemo } from \"react\";\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { createAppContainer } from \"react-navigation\";\r\nimport { createStackNavigator } from \"react-navigation-stack\";\r\n\r\nimport 'react-native-gesture-handler';\r\n\r\nimport { UserContext, UserState } from './context/UserContext';\r\n\r\nimport LoginScreen from './screens/LoginScreen.jsx';\r\nimport NewTeamScreen from './screens/NewTeamScreen';\r\nimport SuccessfullScreen from './screens/SuccessfullScreen';\r\nimport PlanningScreen from './screens/PlanningScreen';\r\n\r\nconst StackNavigator = createStackNavigator(\r\n  {\r\n    Login : LoginScreen,\r\n    NewTeam: NewTeamScreen,\r\n    Successfull: SuccessfullScreen,\r\n    Planning: PlanningScreen\r\n  },\r\n  {\r\n    initialRouteName: \"Planning\",\r\n    headerMode: \"none\"\r\n  }\r\n)\r\n\r\nconst Routes = createAppContainer(StackNavigator);\r\n\r\nexport default function App() {\r\n\r\n  const [userContext, setUserContext] = useState(null);\r\n\r\n  const value = useMemo(() => ({ userContext, setUserContext }), [userContext, setUserContext]);\r\n\r\n\r\n  return (\r\n    <UserContext.Provider value={value}>\r\n      <Routes />\r\n    </UserContext.Provider>\r\n    \r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}