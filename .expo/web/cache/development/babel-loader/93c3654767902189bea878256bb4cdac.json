{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext, useEffect, useCallback } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { UserContext } from \"../context/UserContext\";\nimport URL from \"../utils/URL\";\nimport AddUser from \"./AddUser\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar PlanningScreen = function PlanningScreen(_ref) {\n  var navigation = _ref.navigation;\n  console.log(\"rendering planning screen\");\n\n  var _useContext = useContext(UserContext),\n      userContext = _useContext.userContext,\n      setUserContext = _useContext.setUserContext;\n\n  var usersUrl = URL + \"/api/v1/users/getAllUsers/\";\n  var team = userContext.team;\n  var getUrl = usersUrl + team;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passwordErrorMessage = _useState4[0],\n      setPasswordErrorMessage = _useState4[1];\n\n  var _useState5 = useState({\n    password: \"\",\n    passwordConfirm: \"\",\n    passwordCurrent: \"\"\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newPasswordValues = _useState6[0],\n      setNewPasswordValue = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      toggleChangePassword = _useState8[0],\n      setToggleChangePassword = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      toggleAdminPage = _useState10[0],\n      setToggleAdminPage = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      addUserToggle = _useState12[0],\n      setAddUserToggle = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      teamMembers = _useState14[0],\n      setTeamMembers = _useState14[1];\n\n  useEffect(function () {\n    console.log(\"use effect setting screen\");\n\n    function getUsers() {\n      var response, users;\n      return _regeneratorRuntime.async(function getUsers$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios.get(getUrl));\n\n            case 2:\n              response = _context.sent;\n              users = response.data.data;\n              setTeamMembers(users);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getUsers();\n  }, []);\n  var deleteUser = useCallback(function _callee(user) {\n    var deleteResponse, response, users;\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(axios.delete(URL + \"/api/v1/users/\" + user));\n\n          case 2:\n            deleteResponse = _context2.sent;\n            console.log(deleteResponse.status);\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(axios.get(getUrl));\n\n          case 6:\n            response = _context2.sent;\n            users = response.data.data;\n            setTeamMembers(users);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  var setToken = useCallback(function _callee2(value) {\n    return _regeneratorRuntime.async(function _callee2$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', value));\n\n          case 3:\n            _context3.next = 8;\n            break;\n\n          case 5:\n            _context3.prev = 5;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0.message);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  }, []);\n  var getToken = useCallback(function _callee3(value) {\n    var returnValue;\n    return _regeneratorRuntime.async(function _callee3$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(value));\n\n          case 3:\n            returnValue = _context4.sent;\n            return _context4.abrupt(\"return\", returnValue);\n\n          case 7:\n            _context4.prev = 7;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(\"error when returning getToken, message : \", _context4.t0.message);\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  }, []);\n  var logout = useCallback(function _callee4() {\n    return _regeneratorRuntime.async(function _callee4$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(setToken('logOut'));\n\n          case 2:\n            setUserContext({\n              loggedIn: false,\n              isAdmin: false,\n              firstName: \"\",\n              lastName: \"\",\n              email: \"\",\n              team: \"\",\n              id: \"\"\n            });\n            navigation.navigate(\"Login\");\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  var changePassword = useCallback(function _callee5(passwordCurrent, password, passwordConfirm) {\n    var token, localToken, headers, response;\n    return _regeneratorRuntime.async(function _callee5$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            if (!(password !== passwordConfirm)) {\n              _context6.next = 3;\n              break;\n            }\n\n            setPasswordErrorMessage(\"Password and confirm don't match moron !\");\n            return _context6.abrupt(\"return\");\n\n          case 3:\n            if (!(password === passwordCurrent)) {\n              _context6.next = 6;\n              break;\n            }\n\n            setPasswordErrorMessage(\"Can't change for the same password stupid !\");\n            return _context6.abrupt(\"return\");\n\n          case 6:\n            setIsLoading(true);\n            token = \"Bearer \";\n            _context6.prev = 8;\n            localToken = getToken('token');\n            token += localToken;\n            headers = {\n              'Content-Type': 'application/json',\n              'Authorization': token\n            };\n            _context6.next = 14;\n            return _regeneratorRuntime.awrap(axios.put(backendUrl + \"/api/v1/users/changePassword\", {\n              passwordCurrent: newPasswordValues.passwordCurrent,\n              password: newPasswordValues.password,\n              passwordConfirm: newPasswordValues.passwordConfirm,\n              email: userContext.email\n            }));\n\n          case 14:\n            response = _context6.sent;\n\n            if (response.status === 200) {\n              setIsLoading(false);\n              setPasswordErrorMessage(\"Password Changed\");\n              setTimeout(function () {\n                setPasswordErrorMessage(\"\");\n                setToggleChangePassword(false);\n              }, 1000);\n            } else {\n              setIsLoading(false);\n              setPasswordErrorMessage(\"Something's wrong...\");\n            }\n\n            _context6.next = 21;\n            break;\n\n          case 18:\n            _context6.prev = 18;\n            _context6.t0 = _context6[\"catch\"](8);\n            console.log(_context6.t0.message);\n\n          case 21:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, [[8, 18]], Promise);\n  }, []);\n  return _jsxs(SafeAreaView, {\n    style: styles.globalContainer,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Pressable, {\n        onPress: function onPress() {\n          return navigation.navigate(\"Planning\");\n        },\n        children: _jsx(Image, {\n          source: require(\"./../assets/icons/back.png\"),\n          style: styles.png\n        })\n      }), _jsx(Pressable, {\n        onPress: function onPress() {\n          logout();\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 25,\n            borderWidth: 2,\n            borderColor: \"black\",\n            borderRadius: 5,\n            padding: 10\n          },\n          children: \"Logout\"\n        })\n      })]\n    }), isLoading === false ? _jsxs(ScrollView, {\n      children: [_jsxs(Pressable, {\n        onPress: function onPress() {\n          return setToggleChangePassword(!toggleChangePassword);\n        },\n        style: _objectSpread({\n          marginTop: 30\n        }, styles.inline),\n        children: [_jsx(Image, {\n          source: require(\"./../assets/icons/key.png\"),\n          style: styles.svg\n        }), _jsx(Text, {\n          style: styles.textInline,\n          children: \"Change Password\"\n        })]\n      }), toggleChangePassword === true ? _jsxs(View, {\n        children: [_jsxs(View, {\n          style: styles.passwordView,\n          children: [_jsx(Text, {\n            style: styles.passwordText,\n            children: \"Previous Password\"\n          }), _jsx(TextInput, {\n            style: styles.passwordTextInput,\n            placeholder: \"\",\n            secureTextEntry: true,\n            onChangeText: function onChangeText(text) {\n              setNewPasswordValue(function (previousData) {\n                return _objectSpread(_objectSpread({}, previousData), {}, {\n                  passwordCurrent: text.toString()\n                });\n              });\n            }\n          })]\n        }), _jsxs(View, {\n          style: styles.passwordView,\n          children: [_jsx(Text, {\n            style: styles.passwordText,\n            children: \"New Password\"\n          }), _jsx(TextInput, {\n            style: styles.passwordTextInput,\n            placeholder: \"\",\n            secureTextEntry: true,\n            onChangeText: function onChangeText(text) {\n              setNewPasswordValue(function (previousData) {\n                return _objectSpread(_objectSpread({}, previousData), {}, {\n                  password: text.toString()\n                });\n              });\n            }\n          })]\n        }), _jsxs(View, {\n          style: styles.passwordView,\n          children: [_jsx(Text, {\n            style: styles.passwordText,\n            children: \"Confirm New Password\"\n          }), _jsx(TextInput, {\n            style: styles.passwordTextInput,\n            placeholder: \"\",\n            secureTextEntry: true,\n            onChangeText: function onChangeText(text) {\n              setNewPasswordValue(function (previousData) {\n                return _objectSpread(_objectSpread({}, previousData), {}, {\n                  passwordConfirm: text.toString()\n                });\n              });\n            }\n          })]\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: function onPress() {\n            changePassword(newPasswordValues.passwordCurrent, newPasswordValues.password, newPasswordValues.passwordConfirm);\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Submit\"\n          })\n        }), _jsx(Text, {\n          style: {\n            color: \"rgb(168, 66, 50)\",\n            marginTop: 15,\n            fontSize: 15,\n            alignSelf: \"center\"\n          },\n          children: passwordErrorMessage\n        })]\n      }) : null, userContext.isAdmin === true ? _jsxs(Pressable, {\n        style: styles.inline,\n        onPress: function onPress() {\n          return setToggleAdminPage(!toggleAdminPage);\n        },\n        children: [_jsx(Image, {\n          source: require(\"./../assets/icons/people.png\"),\n          style: styles.svg\n        }), _jsx(Text, {\n          style: styles.textInline,\n          children: \"Admin Panel\"\n        })]\n      }) : null, toggleAdminPage === true ? _jsxs(View, {\n        style: styles.adminContainer,\n        children: [teamMembers.map(function (el, idx) {\n          return _jsxs(View, {\n            style: styles.adminLine,\n            children: [_jsxs(Text, {\n              style: styles.adminText,\n              children: [el.firstName, \" \", el.lastName]\n            }), _jsx(Pressable, {\n              onPress: function onPress() {\n                return deleteUser(el.id);\n              },\n              children: _jsx(Image, {\n                source: require(\"./../assets/icons/delete.png\"),\n                style: styles.svg\n              })\n            })]\n          }, idx);\n        }), _jsx(Pressable, {\n          style: _objectSpread(_objectSpread({}, styles.button), {}, {\n            marginTop: 50\n          }),\n          onPress: function onPress() {\n            return setAddUserToggle(!addUserToggle);\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Add User\"\n          })\n        }), addUserToggle === true ? _jsx(AddUser, {\n          setTeamMembers: setTeamMembers,\n          addUserToggle: addUserToggle,\n          setAddUserToggle: setAddUserToggle\n        }) : null]\n      }) : null]\n    }) : _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"rgb(110, 116, 170)\",\n      style: {\n        paddingTop: 150\n      }\n    })]\n  });\n};\n\nexport default PlanningScreen;\nvar styles = StyleSheet.create({\n  globalContainer: {\n    flex: 1,\n    backgroundColor: \"rgb(235, 232, 231)\"\n  },\n  header: {\n    display: \"flex\",\n    width: \"100%\",\n    flexDirection: \"row\",\n    height: 65,\n    backgroundColor: \"rgb(235, 232, 231)\",\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 15,\n    justifyContent: \"space-between\",\n    marginBottom: 20\n  },\n  png: {\n    height: 35,\n    width: 35\n  },\n  svg: {\n    height: 30,\n    width: 30\n  },\n  inline: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    margin: 5,\n    borderWidth: 1,\n    borderColor: \"black\",\n    borderRadius: 5,\n    padding: 10,\n    alignItems: \"center\"\n  },\n  textInline: {\n    fontSize: 18,\n    marginLeft: 10\n  },\n  passwordView: {\n    margin: 5,\n    marginLeft: 15,\n    marginBottom: 10\n  },\n  passwordText: {\n    fontSize: 15,\n    marginBottom: 5\n  },\n  passwordTextInput: {\n    height: 50,\n    borderRadius: 10,\n    backgroundColor: \"rgb(209, 204, 203)\",\n    fontSize: 25,\n    paddingLeft: 10\n  },\n  button: {\n    backgroundColor: \"rgb(238, 247, 255)\",\n    width: 150,\n    height: 45,\n    display: \"flex\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 10,\n    marginTop: 10\n  },\n  buttonText: {\n    fontSize: 20\n  },\n  adminContainer: {\n    margin: 10\n  },\n  adminLine: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingLeft: 10,\n    paddingRight: 10,\n    height: 50,\n    borderWidth: 1,\n    borderRadius: 5,\n    alignItems: \"center\",\n    marginBottom: 5\n  },\n  adminText: {\n    fontSize: 15\n  }\n});","map":{"version":3,"sources":["/Users/bastien/Desktop/planning-react-native/screens/SettingsScreen.tsx"],"names":["React","useState","useContext","useEffect","useCallback","SafeAreaView","axios","AsyncStorage","UserContext","URL","AddUser","PlanningScreen","navigation","console","log","userContext","setUserContext","usersUrl","team","getUrl","isLoading","setIsLoading","passwordErrorMessage","setPasswordErrorMessage","password","passwordConfirm","passwordCurrent","newPasswordValues","setNewPasswordValue","toggleChangePassword","setToggleChangePassword","toggleAdminPage","setToggleAdminPage","addUserToggle","setAddUserToggle","teamMembers","setTeamMembers","getUsers","get","response","users","data","deleteUser","user","delete","deleteResponse","status","setToken","value","setItem","message","getToken","getItem","returnValue","logout","loggedIn","isAdmin","firstName","lastName","email","id","navigate","changePassword","token","localToken","headers","put","backendUrl","setTimeout","styles","globalContainer","header","require","png","fontSize","borderWidth","borderColor","borderRadius","padding","marginTop","inline","svg","textInline","passwordView","passwordText","passwordTextInput","text","previousData","toString","button","buttonText","color","alignSelf","adminContainer","map","el","idx","adminLine","adminText","paddingTop","StyleSheet","create","flex","backgroundColor","display","width","flexDirection","height","paddingLeft","paddingRight","justifyContent","marginBottom","margin","alignItems","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useCallback } from 'react'\nimport { StyleSheet, Text, View, Image, TextInput, Button, Pressable, ImageBackground, ActivityIndicator, ScrollView  } from 'react-native';\nimport { CardStyleInterpolators } from 'react-navigation-stack';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { NavigationContext } from 'react-navigation';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport * as ScreenOrientation from 'expo-screen-orientation';\n\nimport { UserContext } from '../context/UserContext';\n\nimport URL from '../utils/URL';\n\nimport AddUser from './AddUser';\n\nconst PlanningScreen = ({ navigation }) => {\n\n    console.log(\"rendering planning screen\");\n\n    const { userContext, setUserContext } = useContext(UserContext);\n\n    const usersUrl: string = `${URL}/api/v1/users/getAllUsers/`;\n    const team: string = userContext.team;\n    const getUrl = usersUrl + team\n\n    const [isLoading, setIsLoading] = useState(false);\n\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState(\"\");\n    const [newPasswordValues, setNewPasswordValue] = useState({\n        password: \"\",\n        passwordConfirm: \"\",\n        passwordCurrent: \"\"\n    })\n\n    const [toggleChangePassword, setToggleChangePassword] = useState(false);\n    const [toggleAdminPage, setToggleAdminPage] = useState(false);\n    const [addUserToggle, setAddUserToggle] = useState(false);\n\n    const [teamMembers, setTeamMembers] = useState([]);\n\n    // Lazy loading the users from mongo DB\n    useEffect(() => {\n        console.log(\"use effect setting screen\");\n        async function getUsers() {\n            const response = await axios.get(getUrl);\n            const users = response.data.data;\n            setTeamMembers(users);\n        }\n\n        getUsers();\n        \n    }, [])\n\n    // Delete Users\n    const deleteUser = useCallback(async (user: string) => {\n        // Send delete request via API\n        const deleteResponse = await axios.delete(`${URL}/api/v1/users/${user}`);\n        console.log(deleteResponse.status);\n\n        // Set new users list\n        const response = await axios.get(getUrl);\n        const users = response.data.data;\n        setTeamMembers(users);\n    }, []);\n\n    // Logout function\n\n    const setToken = useCallback(async (value) => {\n        try {\n          await AsyncStorage.setItem('token', value)\n        } catch (e) {\n          console.log(e.message);\n        }\n    }, []);\n\n    const getToken = useCallback(async (value) => {\n        try {\n            const returnValue = await AsyncStorage.getItem(value);\n            return returnValue;\n        } catch (e) {\n            console.log(\"error when returning getToken, message : \", e.message);\n        }\n    }, []);\n\n    const logout = useCallback(async() => {\n        await setToken('logOut');\n\n        setUserContext({\n            loggedIn: false,\n            isAdmin: false,\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            team: \"\", \n            id: \"\"\n        });\n\n        navigation.navigate(\"Login\");\n    }, []);\n\n    \n\n    \n\n    const changePassword = useCallback(async (passwordCurrent: string, password: string, passwordConfirm: string) =>\n    {\n        if (password !== passwordConfirm)\n        {\n            setPasswordErrorMessage(\"Password and confirm don't match moron !\");\n            return;\n        }\n\n        if (password === passwordCurrent)\n        {\n            setPasswordErrorMessage(\"Can't change for the same password stupid !\");\n            return;\n        }\n\n        setIsLoading(true);\n\n        let token = \"Bearer \";\n        try {\n            let localToken = getToken('token');\n            token += localToken;\n            const headers = {\n                'Content-Type': 'application/json',\n                'Authorization': token\n              }\n\n            const response = await axios.put(`${backendUrl}/api/v1/users/changePassword`, {\n                passwordCurrent: newPasswordValues.passwordCurrent,\n                password: newPasswordValues.password,\n                passwordConfirm: newPasswordValues.passwordConfirm,\n                email: userContext.email\n            });\n\n            if (response.status === 200)\n            {\n                setIsLoading(false);\n                setPasswordErrorMessage(\"Password Changed\");\n                setTimeout(() => {\n                    setPasswordErrorMessage(\"\");\n                    setToggleChangePassword(false);\n                }, 1000);\n            }\n\n            else {\n                setIsLoading(false);\n                setPasswordErrorMessage(\"Something's wrong...\");\n            }\n                \n        } catch (e) {\n            console.log(e.message)\n        }\n    }, []);\n\n    return (\n        \n        <SafeAreaView style={styles.globalContainer}>\n            <View style={styles.header}>\n                <Pressable\n                    onPress={() => navigation.navigate(\"Planning\")}>\n                    <Image source={require('./../assets/icons/back.png')} style={styles.png}/>\n                </Pressable>\n\n                <Pressable\n                    onPress={()=> {\n                        logout();\n                    }}\n                >\n                    <Text style={{\n                        fontSize: 25,\n                        borderWidth: 2,\n                        borderColor: \"black\",\n                        borderRadius: 5,\n                        padding: 10\n                    }}>Logout</Text>\n                </Pressable>\n\n            </View>\n            \n            {\n                isLoading === false ?\n\n                <ScrollView>\n                <Pressable \n                    onPress={() => setToggleChangePassword(!toggleChangePassword)}\n                    style={{marginTop: 30, ...styles.inline}}>\n                    <Image source={require('./../assets/icons/key.png')} style={styles.svg}/>\n                    <Text style={styles.textInline}>Change Password</Text>\n                </Pressable>\n\n                {\n                    toggleChangePassword === true ? \n                    <View>\n                        <View style={styles.passwordView}>\n                            <Text style={styles.passwordText}>Previous Password</Text>\n                            <TextInput \n                                style={styles.passwordTextInput}\n                                placeholder=\"\"\n                                secureTextEntry={true}\n                                onChangeText={text => {\n                                    setNewPasswordValue(previousData => {\n                                        return {...previousData, passwordCurrent: text.toString()}\n                                    })\n                                }}\n                            />\n                        </View>\n\n                        <View style={styles.passwordView}>\n                            <Text style={styles.passwordText}>New Password</Text>\n                            <TextInput \n                                style={styles.passwordTextInput}\n                                placeholder=\"\"\n                                secureTextEntry={true}\n                                onChangeText={text => {\n                                    setNewPasswordValue(previousData => {\n                                        return {...previousData, password: text.toString()}\n                                    })\n                                }}\n                            />\n                        </View>\n\n                        <View style={styles.passwordView}>\n                            <Text style={styles.passwordText}>Confirm New Password</Text>\n                            <TextInput \n                                style={styles.passwordTextInput}\n                                placeholder=\"\"\n                                secureTextEntry={true}\n                                onChangeText={text => {\n                                    setNewPasswordValue(previousData => {\n                                        return {...previousData, passwordConfirm: text.toString()}\n                                    })\n                                }}\n                            />\n                        </View>\n\n                        <Pressable \n                            style={styles.button}\n                            onPress={() => {\n                                changePassword(newPasswordValues.passwordCurrent, newPasswordValues.password, newPasswordValues.passwordConfirm)\n                            }}\n                            >\n                            <Text style={styles.buttonText}>Submit</Text>\n                        </Pressable>\n\n                        <Text style={{color: \"rgb(168, 66, 50)\", marginTop: 15, fontSize: 15, alignSelf:\"center\"}}>{passwordErrorMessage}</Text>\n                    </View>\n\n\n                    : null\n                }\n                \n                {\n                    userContext.isAdmin === true ?\n\n                    <Pressable \n                        style={styles.inline}\n                        onPress={() => setToggleAdminPage(!toggleAdminPage)}\n                        >\n                        <Image source={require('./../assets/icons/people.png')} style={styles.svg}/>\n                        <Text style={styles.textInline}>Admin Panel</Text>\n                    </Pressable>\n\n                    : null\n                }\n\n                {\n                    toggleAdminPage === true ? \n\n                    <View style={styles.adminContainer}>\n                        {\n                            teamMembers.map((el, idx) => {\n                                return(\n                                    <View key={idx} style={styles.adminLine}>\n                                        <Text style={styles.adminText}>{el.firstName} {el.lastName}</Text>\n                                        <Pressable\n                                            onPress={() => deleteUser(el.id)}\n                                        >\n                                            <Image  source={require('./../assets/icons/delete.png')} style={styles.svg}/>\n                                        </Pressable>\n                                    </View>)\n                            })\n                        }\n\n                        <Pressable \n                            style={{...styles.button, marginTop: 50}}\n                            onPress={() => setAddUserToggle(!addUserToggle)}\n                            >\n                            <Text style={styles.buttonText}>Add User</Text>\n                        </Pressable>\n\n                        { addUserToggle === true ? <AddUser \n                        setTeamMembers={setTeamMembers}\n                        addUserToggle={addUserToggle}\n                        setAddUserToggle={setAddUserToggle}/> : null }\n                    </View>\n                    \n                    \n                    : null\n\n                }\n                \n            </ScrollView>\n\n            : \n\n            <ActivityIndicator size=\"large\" color=\"rgb(110, 116, 170)\" style={{paddingTop: 150}}/>\n\n            }\n            \n            \n        </SafeAreaView>\n    )\n}\n\nexport default PlanningScreen\n\nconst styles = StyleSheet.create({\n    globalContainer: {\n        flex: 1,\n        backgroundColor: \"rgb(235, 232, 231)\",\n    },\n    header: {\n        display: \"flex\",\n        width: \"100%\",\n        flexDirection: \"row\",\n        height: 65,\n        backgroundColor: \"rgb(235, 232, 231)\",\n        paddingLeft: 10,\n        paddingRight: 10,\n        paddingTop: 15,\n        justifyContent: \"space-between\",\n        marginBottom: 20        \n    },\n    png: {\n        height: 35,\n        width: 35\n    },\n    svg: {\n        height: 30,\n        width: 30\n    },\n    inline: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        margin: 5,\n        borderWidth: 1,\n        borderColor: \"black\",\n        borderRadius: 5,\n        padding: 10,\n        alignItems: \"center\"\n    },\n    textInline: {\n        fontSize: 18,\n        marginLeft: 10,\n    },\n    passwordView: {\n        margin: 5,\n        marginLeft: 15,\n        marginBottom: 10\n    },\n    passwordText: {\n        fontSize: 15,\n        marginBottom: 5\n    },\n    passwordTextInput: {\n        height: 50,\n        borderRadius: 10,\n        backgroundColor: \"rgb(209, 204, 203)\",\n        fontSize: 25,\n        paddingLeft: 10,\n    },\n    button: {\n        backgroundColor: \"rgb(238, 247, 255)\",\n        width: 150,\n        height: 45,\n        display: \"flex\",\n        alignItems: \"center\",\n        alignSelf: \"center\",\n        justifyContent: \"center\",\n        borderRadius: 10,\n        marginTop: 10,\n    },\n    buttonText: {\n        fontSize: 20\n    },\n    adminContainer: {\n        margin: 10,\n    },\n    adminLine: {\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        paddingLeft: 10,\n        paddingRight: 10,\n        height: 50,\n        borderWidth: 1,\n        borderRadius: 5,\n        alignItems: \"center\",\n        marginBottom: 5\n    },\n    adminText: {\n        fontSize: 15,\n\n    }\n})\n"]},"metadata":{},"sourceType":"module"}