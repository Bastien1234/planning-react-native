{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Picker } from '@react-native-picker/picker';\nimport axios from 'axios';\nimport { UserContext } from \"../context/UserContext\";\nimport URL from \"../utils/URL\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddUser = React.memo(function (_ref) {\n  var setTeamMembers = _ref.setTeamMembers,\n      addUserToggle = _ref.addUserToggle,\n      setAddUserToggle = _ref.setAddUserToggle;\n  console.log('render add user');\n\n  var _useContext = useContext(UserContext),\n      userContext = _useContext.userContext,\n      setUserContext = _useContext.setUserContext;\n\n  var serverURL = URL + \"/api/v1/users/signup\";\n  var usersUrl = URL + \"/api/v1/users/getAllUsers/\";\n  var team = userContext.team;\n  var getUrl = usersUrl + team;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      bottomMessage = _useState2[0],\n      setBottomMessage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var defaultSettings = {\n    \"firstName\": \"\",\n    \"lastName\": \"\",\n    \"isAdmin\": false,\n    \"daysOff\": [1, 2],\n    \"email\": \"\",\n    \"team\": userContext.team,\n    \"password\": \"\",\n    \"confirmPassword\": \"\"\n  };\n\n  var _useState5 = useState(defaultSettings),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newUserData = _useState6[0],\n      setNewUserData = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      daysOff = _useState8[0],\n      setDaysOff = _useState8[1];\n\n  function addNewUser() {\n    var postResponse, response, users;\n    return _regeneratorRuntime.async(function addNewUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"calling add new user function\");\n            setIsLoading(true);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.post(serverURL, newUserData));\n\n          case 5:\n            postResponse = _context.sent;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(axios.get(getUrl));\n\n          case 8:\n            response = _context.sent;\n            users = response.data.data;\n            setTeamMembers(users);\n            setIsLoading(false);\n            setBottomMessage(\"\");\n            setAddUserToggle(!addUserToggle);\n            _context.next = 21;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](2);\n            setIsLoading(false);\n            setBottomMessage(\"Sorry, wrong inputs\");\n            console.log(_context.t0.message);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 16]], Promise);\n  }\n\n  return isLoading === false ? _jsxs(View, {\n    children: [_jsx(Text, {\n      style: {\n        marginTop: 35,\n        alignSelf: \"center\",\n        fontSize: 20,\n        marginBottom: 15\n      },\n      children: \"Let's add a new user\"\n    }), _jsxs(View, {\n      style: styles.passwordView,\n      children: [_jsx(Text, {\n        style: styles.passwordText,\n        children: \"First Name\"\n      }), _jsx(TextInput, {\n        style: styles.passwordTextInput,\n        placeholder: \"\",\n        secureTextEntry: false,\n        onChangeText: function onChangeText(text) {\n          setNewUserData(function (previousData) {\n            return _objectSpread(_objectSpread({}, previousData), {}, {\n              firstName: text.toString()\n            });\n          });\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.passwordView,\n      children: [_jsx(Text, {\n        style: styles.passwordText,\n        children: \"Last Name\"\n      }), _jsx(TextInput, {\n        style: styles.passwordTextInput,\n        placeholder: \"\",\n        secureTextEntry: false,\n        onChangeText: function onChangeText(text) {\n          setNewUserData(function (previousData) {\n            return _objectSpread(_objectSpread({}, previousData), {}, {\n              lastName: text.toString()\n            });\n          });\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.passwordView,\n      children: [_jsx(Text, {\n        style: styles.passwordText,\n        children: \"Email\"\n      }), _jsx(TextInput, {\n        style: styles.passwordTextInput,\n        placeholder: \"\",\n        secureTextEntry: false,\n        onChangeText: function onChangeText(text) {\n          setNewUserData(function (previousData) {\n            return _objectSpread(_objectSpread({}, previousData), {}, {\n              email: text.toString()\n            });\n          });\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.passwordView,\n      children: [_jsx(Text, {\n        style: styles.passwordText,\n        children: \"Password\"\n      }), _jsx(TextInput, {\n        style: styles.passwordTextInput,\n        placeholder: \"\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          setNewUserData(function (previousData) {\n            return _objectSpread(_objectSpread({}, previousData), {}, {\n              password: text.toString()\n            });\n          });\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.passwordView,\n      children: [_jsx(Text, {\n        style: styles.passwordText,\n        children: \"Confirm Password\"\n      }), _jsx(TextInput, {\n        style: styles.passwordTextInput,\n        placeholder: \"\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          setNewUserData(function (previousData) {\n            return _objectSpread(_objectSpread({}, previousData), {}, {\n              confirmPassword: text.toString()\n            });\n          });\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.passwordView,\n      children: [_jsx(Text, {\n        children: \"Days off\"\n      }), _jsxs(Picker, {\n        selectedValue: daysOff,\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          var arrayOfDaysOff = [];\n          arrayOfDaysOff[0] = itemValue.substring(0, 1);\n          arrayOfDaysOff[1] = itemValue.substring(1, 2);\n          setNewUserData(_objectSpread(_objectSpread({}, newUserData), {}, {\n            daysOff: arrayOfDaysOff\n          }));\n        },\n        children: [_jsx(Picker.Item, {\n          label: \"Monday Tuesday\",\n          value: \"12\"\n        }), _jsx(Picker.Item, {\n          label: \"Tuesday Wednesday\",\n          value: \"23\"\n        }), _jsx(Picker.Item, {\n          label: \"Wednesday Thursday\",\n          value: \"34\"\n        }), _jsx(Picker.Item, {\n          label: \"Thursday Friday\",\n          value: \"45\"\n        }), _jsx(Picker.Item, {\n          label: \"Friday Saturday\",\n          value: \"56\"\n        }), _jsx(Picker.Item, {\n          label: \"Saturday Sunday\",\n          value: \"60\"\n        }), _jsx(Picker.Item, {\n          label: \"Sunday Monday\",\n          value: \"01\"\n        })]\n      })]\n    }), _jsx(Pressable, {\n      style: styles.button,\n      onPress: addNewUser,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Submit\"\n      })\n    }), _jsx(Text, {\n      style: {\n        color: \"rgb(168, 66, 50)\",\n        marginTop: 15,\n        fontSize: 25,\n        alignSelf: \"center\"\n      },\n      children: bottomMessage\n    })]\n  }) : _jsxs(View, {\n    children: [_jsx(Text, {\n      style: {\n        alignSelf: \"center\",\n        marginTop: 20,\n        fontSize: 20\n      },\n      children: \"Trying to add new user...\"\n    }), _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"rgb(110, 116, 170)\",\n      style: {\n        paddingTop: 30,\n        marginBottom: 100\n      }\n    })]\n  });\n});\nexport default AddUser;\nvar styles = StyleSheet.create({\n  globalContainer: {\n    flex: 1,\n    backgroundColor: \"rgb(235, 232, 231)\"\n  },\n  passwordView: {\n    margin: 5,\n    marginLeft: 15,\n    marginBottom: 10\n  },\n  passwordText: {\n    fontSize: 15,\n    marginBottom: 5\n  },\n  passwordTextInput: {\n    height: 50,\n    borderRadius: 10,\n    backgroundColor: \"rgb(209, 204, 203)\",\n    fontSize: 25,\n    paddingLeft: 10\n  },\n  button: {\n    backgroundColor: \"rgb(238, 247, 255)\",\n    width: 150,\n    height: 45,\n    display: \"flex\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 10,\n    marginTop: 10\n  },\n  buttonText: {\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["/Users/bastien/Desktop/planning-react-native/screens/AddUser.tsx"],"names":["React","useState","useContext","Picker","axios","UserContext","URL","AddUser","memo","setTeamMembers","addUserToggle","setAddUserToggle","console","log","userContext","setUserContext","serverURL","usersUrl","team","getUrl","bottomMessage","setBottomMessage","isLoading","setIsLoading","defaultSettings","newUserData","setNewUserData","daysOff","setDaysOff","addNewUser","post","postResponse","get","response","users","data","message","marginTop","alignSelf","fontSize","marginBottom","styles","passwordView","passwordText","passwordTextInput","text","previousData","firstName","toString","lastName","email","password","confirmPassword","itemValue","itemIndex","arrayOfDaysOff","substring","button","buttonText","color","paddingTop","StyleSheet","create","globalContainer","flex","backgroundColor","margin","marginLeft","height","borderRadius","paddingLeft","width","display","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { StyleSheet, Text, View, Image, TextInput, Button, Pressable, ImageBackground, ActivityIndicator, ScrollView  } from 'react-native';\nimport { CardStyleInterpolators } from 'react-navigation-stack';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { NavigationContext } from 'react-navigation';\nimport { Picker } from '@react-native-picker/picker';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport { UserContext } from '../context/UserContext';\n\nimport URL from '../utils/URL';\n\nconst AddUser = React.memo(({setTeamMembers, addUserToggle, setAddUserToggle} ) => {\n\n    console.log('render add user')\n\n    const {userContext, setUserContext} = useContext(UserContext);\n\n    const serverURL: string = `${URL}/api/v1/users/signup`;\n    const usersUrl: string = `${URL}/api/v1/users/getAllUsers/`;\n    const team: string = userContext.team;\n    const getUrl = usersUrl + team\n\n    const [bottomMessage, setBottomMessage] = useState(\"\");\n\n    const [isLoading, setIsLoading] = useState(false);\n\n    interface UserInputs {\n        firstName: string,\n        lastName: string,\n        isAdmin: boolean,\n        daysOff: [number, number],\n        email: string,\n        team: string,\n        password: string,\n        confirmPassword: string \n    }\n\n    const defaultSettings: UserInputs = {\n        \"firstName\": \"\",\n        \"lastName\": \"\",\n        \"isAdmin\": false,\n        \"daysOff\": [1, 2],\n        \"email\": \"\",\n        \"team\": userContext.team,\n        \"password\": \"\",\n        \"confirmPassword\": \"\"\n    }\n\n    const [newUserData, setNewUserData] = useState(defaultSettings);\n    const [daysOff, setDaysOff] = useState(\"\");\n\n    async function addNewUser() {\n        console.log(\"calling add new user function\");\n        setIsLoading(true);\n        try {\n            // create proper array for days off\n            const postResponse = await axios.post(serverURL, newUserData);\n\n            // Set new users list\n            const response = await axios.get(getUrl);\n            const users = response.data.data;\n            setTeamMembers(users);\n            setIsLoading(false)\n            setBottomMessage(\"\");\n\n            setAddUserToggle(!addUserToggle);\n\n\n        } catch (e) {\n            setIsLoading(false);\n            setBottomMessage(\"Sorry, wrong inputs\");\n            console.log(e.message)        \n        }\n    }\n\n    return (\n\n        isLoading === false ?\n        <View>\n            <Text style={{\n                marginTop: 35,\n                alignSelf: \"center\",\n                fontSize: 20,\n                marginBottom: 15\n            }}>Let's add a new user</Text>\n\n            <View style={styles.passwordView}>\n                <Text style={styles.passwordText}>First Name</Text>\n                <TextInput \n                    style={styles.passwordTextInput}\n                    placeholder=\"\"\n                    secureTextEntry={false}\n                    onChangeText={text => {\n                        setNewUserData(previousData => {\n                            return {...previousData, firstName: text.toString()}\n                        })\n                    }}\n                />\n            </View>\n\n            <View style={styles.passwordView}>\n                <Text style={styles.passwordText}>Last Name</Text>\n                <TextInput \n                    style={styles.passwordTextInput}\n                    placeholder=\"\"\n                    secureTextEntry={false}\n                    onChangeText={text => {\n                        setNewUserData(previousData => {\n                            return {...previousData, lastName: text.toString()}\n                        })\n                    }}\n                />\n            </View>\n\n            <View style={styles.passwordView}>\n                <Text style={styles.passwordText}>Email</Text>\n                <TextInput \n                    style={styles.passwordTextInput}\n                    placeholder=\"\"\n                    secureTextEntry={false}\n                    onChangeText={text => {\n                        setNewUserData(previousData => {\n                            return {...previousData, email: text.toString()}\n                        })\n                    }}\n                />\n            </View>\n\n            <View style={styles.passwordView}>\n                <Text style={styles.passwordText}>Password</Text>\n                <TextInput \n                    style={styles.passwordTextInput}\n                    placeholder=\"\"\n                    secureTextEntry={true}\n                    onChangeText={text => {\n                        setNewUserData(previousData => {\n                            return {...previousData, password: text.toString()}\n                        })\n                    }}\n                />\n            </View>\n\n            <View style={styles.passwordView}>\n                <Text style={styles.passwordText}>Confirm Password</Text>\n                <TextInput \n                    style={styles.passwordTextInput}\n                    placeholder=\"\"\n                    secureTextEntry={true}\n                    onChangeText={text => {\n                        setNewUserData(previousData => {\n                            return {...previousData, confirmPassword: text.toString()}\n                        })\n                    }}\n                />\n            </View>\n            \n            <View style={styles.passwordView}>\n                <Text>Days off</Text>\n                <Picker\n                    selectedValue={daysOff}\n                    onValueChange={(itemValue, itemIndex) =>\n                        {let arrayOfDaysOff: number[] = [];\n                        arrayOfDaysOff[0] = itemValue.substring(0, 1);\n                        arrayOfDaysOff[1] = itemValue.substring(1, 2);\n                        setNewUserData({...newUserData, daysOff: arrayOfDaysOff});}\n                    }>\n                    <Picker.Item label=\"Monday Tuesday\" value=\"12\" />\n                    <Picker.Item label=\"Tuesday Wednesday\" value=\"23\" />\n                    <Picker.Item label=\"Wednesday Thursday\" value=\"34\" />\n                    <Picker.Item label=\"Thursday Friday\" value=\"45\" />\n                    <Picker.Item label=\"Friday Saturday\" value=\"56\" />\n                    <Picker.Item label=\"Saturday Sunday\" value=\"60\" />\n                    <Picker.Item label=\"Sunday Monday\" value=\"01\" />\n                </Picker>\n            </View>\n\n            <Pressable \n                style={styles.button}\n                onPress={addNewUser}\n                >\n                <Text style={styles.buttonText}>Submit</Text>\n            </Pressable>\n\n            <Text style={{color: \"rgb(168, 66, 50)\", marginTop: 15, fontSize: 25, alignSelf:\"center\"}}>{bottomMessage}</Text>\n            \n        </View>\n\n        :\n\n        <View>\n            <Text style={{\n                alignSelf: \"center\",\n                marginTop: 20,\n                fontSize: 20\n                }}>Trying to add new user...</Text>\n            <ActivityIndicator size=\"large\" color=\"rgb(110, 116, 170)\" style={{paddingTop: 30, marginBottom: 100}}/> \n        </View>\n    )\n});\n\nexport default AddUser\n\nconst styles = StyleSheet.create({\n    globalContainer: {\n        flex: 1,\n        backgroundColor: \"rgb(235, 232, 231)\",\n    },\n    passwordView: {\n        margin: 5,\n        marginLeft: 15,\n        marginBottom: 10\n    },\n    passwordText: {\n        fontSize: 15,\n        marginBottom: 5\n    },\n    passwordTextInput: {\n        height: 50,\n        borderRadius: 10,\n        backgroundColor: \"rgb(209, 204, 203)\",\n        fontSize: 25,\n        paddingLeft: 10,\n    },\n    button: {\n        backgroundColor: \"rgb(238, 247, 255)\",\n        width: 150,\n        height: 45,\n        display: \"flex\",\n        alignItems: \"center\",\n        alignSelf: \"center\",\n        justifyContent: \"center\",\n        borderRadius: 10,\n        marginTop: 10,\n    },\n    buttonText: {\n        fontSize: 20\n    },\n})\n"]},"metadata":{},"sourceType":"module"}