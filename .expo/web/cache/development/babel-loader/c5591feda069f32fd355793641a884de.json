{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { CardStyleInterpolators } from 'react-navigation-stack';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { NavigationContext } from 'react-navigation';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { UserContext } from \"./../context/UserContext\";\nimport URL from \"../utils/URL\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar backendURL = URL + \"/api/v1/users/login\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      userContext = _useContext.userContext,\n      setUserContext = _useContext.setUserContext;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errMessage = _useState6[0],\n      setErrMessage = _useState6[1];\n\n  var storeToken = function storeToken(value) {\n    return _regeneratorRuntime.async(function storeToken$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', value));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0.message);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var signInOnClick = function signInOnClick() {\n    var bodyConfig, response, u;\n    return _regeneratorRuntime.async(function signInOnClick$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(email === \"\")) {\n              _context2.next = 5;\n              break;\n            }\n\n            setErrMessage(\"Provide email\");\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            if (!(password === \"\")) {\n              _context2.next = 8;\n              break;\n            }\n\n            setErrMessage(\"Choose password\");\n            return _context2.abrupt(\"return\");\n\n          case 8:\n            bodyConfig = {\n              email: email,\n              password: password\n            };\n            _context2.prev = 9;\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(axios.post(backendURL, bodyConfig));\n\n          case 12:\n            response = _context2.sent;\n\n            if (!(response.status === 200)) {\n              _context2.next = 19;\n              break;\n            }\n\n            _context2.next = 16;\n            return _regeneratorRuntime.awrap(storeToken(response.data.token));\n\n          case 16:\n            u = response.data.user;\n            setUserContext({\n              loggedIn: true,\n              isAdmin: u.isAdmin,\n              firstName: u.firstName,\n              lastName: u.lastName,\n              team: u.team,\n              email: u.email,\n              id: u._id\n            });\n            navigation.navigate(\"Sucessfull\");\n\n          case 19:\n            _context2.next = 25;\n            break;\n\n          case 21:\n            _context2.prev = 21;\n            _context2.t0 = _context2[\"catch\"](9);\n            setErrMessage(\"Smthng went wrong\");\n            console.log(\"error message : \" + _context2.t0.message);\n\n          case 25:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[9, 21]], Promise);\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.globalContainer,\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsx(Text, {\n        style: styles.headerTitle,\n        children: \"Planning Manager\"\n      })\n    }), _jsxs(View, {\n      style: styles.inputsContainer,\n      children: [_jsxs(View, {\n        style: styles.viewHolder,\n        children: [_jsx(Text, {\n          style: styles.preTextInput,\n          children: \"Enter email\"\n        }), _jsx(TextInput, {\n          style: styles.textInput,\n          placeholder: \"\",\n          value: email,\n          onChangeText: setEmail\n        }), _jsx(View, {\n          style: {\n            marginTop: 20\n          }\n        }), _jsx(Text, {\n          style: styles.preTextInput,\n          children: \"Enter password\"\n        }), _jsx(TextInput, {\n          style: styles.textInput,\n          placeholder: \"\",\n          value: password,\n          onChangeText: setPassword\n        }), _jsx(View, {\n          style: {\n            marginTop: 30\n          }\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: function onPress() {\n            return signInOnClick();\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Sign In\"\n          })\n        }), _jsx(Text, {\n          children: errMessage\n        })]\n      }), _jsx(View, {\n        style: {\n          paddingBottom: 30\n        }\n      }), _jsxs(View, {\n        style: styles.viewHolder,\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 18\n          },\n          children: \"New here ?\"\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: function onPress() {\n            return navigation.navigate(\"NewTeam\");\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Start New Team\"\n          })\n        })]\n      })]\n    })]\n  });\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  globalContainer: {\n    flex: 1,\n    backgroundColor: \"rgb(110, 116, 170)\"\n  },\n  header: {\n    display: \"flex\",\n    height: 65,\n    backgroundColor: \"rgb(235, 232, 231)\",\n    justifyContent: \"center\"\n  },\n  headerTitle: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    color: \"rgb(110, 116, 170)\",\n    alignSelf: \"center\"\n  },\n  headerSubtitle: {\n    fontSize: 17,\n    fontWeight: \"bold\",\n    color: \"rgb(235, 232, 231)\",\n    marginBottom: 10,\n    alignSelf: \"center\"\n  },\n  headerImage: {\n    flex: 1,\n    resizeMode: \"center\",\n    justifyContent: 'center',\n    opacity: 0.7\n  },\n  inputsContainer: {\n    flex: 1,\n    justifyContent: \"space-between\",\n    marginTop: 50,\n    marginBottom: 50\n  },\n  viewHolder: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  preTextInput: {\n    fontSize: 17,\n    paddingLeft: 20,\n    alignSelf: \"flex-start\"\n  },\n  button: {\n    backgroundColor: \"rgb(238, 247, 255)\",\n    width: 150,\n    height: 45,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 10,\n    marginTop: 10\n  },\n  buttonText: {\n    fontSize: 20\n  },\n  textInput: {\n    display: \"flex\",\n    backgroundColor: \"white\",\n    width: \"95%\",\n    marginTop: 5,\n    borderRadius: 5,\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/mr b/Desktop/planning-react-native/screens/LoginScreen.jsx"],"names":["React","useState","useContext","CardStyleInterpolators","SafeAreaView","NavigationContext","axios","AsyncStorage","UserContext","URL","backendURL","LoginScreen","navigation","userContext","setUserContext","email","setEmail","password","setPassword","errMessage","setErrMessage","storeToken","value","setItem","console","log","message","signInOnClick","bodyConfig","post","response","status","data","token","u","user","loggedIn","isAdmin","firstName","lastName","team","id","_id","navigate","styles","globalContainer","header","headerTitle","inputsContainer","viewHolder","preTextInput","textInput","marginTop","button","buttonText","paddingBottom","fontSize","StyleSheet","create","flex","backgroundColor","display","height","justifyContent","fontWeight","color","alignSelf","headerSubtitle","marginBottom","headerImage","resizeMode","opacity","alignItems","paddingLeft","width","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport { StyleSheet, Text, View, TextInput, Button, Pressable, ImageBackground  } from 'react-native';\r\nimport { CardStyleInterpolators } from 'react-navigation-stack';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { NavigationContext } from 'react-navigation';\r\nimport axios from 'axios';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nimport { UserContext } from './../context/UserContext';\r\n\r\nimport URL from '../utils/URL';\r\n\r\nconst backendURL = `${URL}/api/v1/users/login`;\r\n\r\n\r\n// import backgroundImage from '../assets/backgroundImages/mobile-background-image.jpg';\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n\r\n    const { userContext, setUserContext } = useContext(UserContext);\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const [errMessage, setErrMessage] = useState(\"\");\r\n\r\n    // Loggin existing user\r\n\r\n    const storeToken = async (value) => {\r\n        try {\r\n          await AsyncStorage.setItem('token', value)\r\n        } catch (e) {\r\n          console.log(e.message);\r\n        }\r\n      }\r\n\r\n    const signInOnClick = async () => {\r\n        // Errors handled on front end\r\n        if (email === \"\") {\r\n            setErrMessage(\"Provide email\");\r\n            return;\r\n        }  \r\n        else if (password === \"\") {\r\n            setErrMessage(\"Choose password\");\r\n            return;\r\n        }\r\n            \r\n        // Try to log in with backend\r\n        const bodyConfig = {\r\n            email: email,\r\n            password: password\r\n        }\r\n        try {\r\n            const response = await axios.post(backendURL, bodyConfig);\r\n            if (response.status === 200) {\r\n                // Send token\r\n                await storeToken(response.data.token);\r\n                const u = response.data.user;\r\n                \r\n                \r\n                setUserContext({\r\n                    loggedIn: true,\r\n                    isAdmin: u.isAdmin,\r\n                    firstName: u.firstName,\r\n                    lastName: u.lastName,\r\n                    team: u.team,\r\n                    email: u.email,\r\n                    id: u._id\r\n                });\r\n\r\n                navigation.navigate(\"Sucessfull\");\r\n            }\r\n            \r\n        } catch(e) {\r\n            setErrMessage(\"Smthng went wrong\");\r\n            console.log(\"error message : \" + e.message)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <SafeAreaView style={styles.globalContainer}>\r\n            {/* Header */}\r\n            {/* <View style={styles.header}>\r\n                <ImageBackground source={backgroundImage} style={styles.headerImage}>\r\n                    <Text style={styles.headerTitle}>Planning Manager</Text>\r\n                    <Text style={styles.headerSubtitle}>Your solution for managing your teams</Text>\r\n                </ImageBackground>\r\n                \r\n\r\n\r\n            </View> */}\r\n\r\n            <View style={styles.header}>\r\n                <Text style={styles.headerTitle}>Planning Manager</Text>\r\n            </View>\r\n\r\n            {/* App */}\r\n            <View style={styles.inputsContainer}>\r\n                <View style={styles.viewHolder}>\r\n                    <Text style={styles.preTextInput}>Enter email</Text>\r\n                    <TextInput \r\n                        style={styles.textInput} \r\n                        placeholder=\"\" \r\n                        value={email}\r\n                        onChangeText={setEmail}\r\n                        />\r\n\r\n                    <View style={{marginTop: 20}}></View>\r\n                    <Text style={styles.preTextInput}>Enter password</Text>\r\n                    <TextInput \r\n                        style={styles.textInput} \r\n                        placeholder=\"\"\r\n                        value={password}\r\n                        onChangeText={setPassword}\r\n                        />\r\n\r\n                    <View style={{marginTop: 30}}></View>\r\n\r\n\r\n                    <Pressable style={styles.button}\r\n                        onPress={() => signInOnClick()}\r\n                    >\r\n                        <Text style={styles.buttonText}>Sign In</Text>\r\n                    </Pressable>\r\n                    <Text>{errMessage}</Text>\r\n                </View>\r\n\r\n                {/* Separator */}\r\n                <View style={{paddingBottom: 30}}></View>\r\n\r\n                <View style={styles.viewHolder}>\r\n                    <Text style={{ fontSize: 18 }}>New here ?</Text>\r\n\r\n                    <Pressable style={styles.button}\r\n                    onPress={()=> navigation.navigate(\"NewTeam\")}>\r\n                        <Text style={styles.buttonText}>Start New Team</Text>\r\n                    </Pressable>\r\n\r\n                </View>\r\n            </View>\r\n            \r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    globalContainer: {\r\n        flex: 1,\r\n        backgroundColor: \"rgb(110, 116, 170)\",\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        height: 65,\r\n        backgroundColor: \"rgb(235, 232, 231)\",\r\n        justifyContent: \"center\"\r\n    },\r\n    headerTitle: {\r\n        fontSize: 30,\r\n        fontWeight: \"bold\",\r\n        color: \"rgb(110, 116, 170)\",\r\n        // marginTop: 50,\r\n        // marginBottom: 15,\r\n        alignSelf: \"center\"\r\n    },\r\n    headerSubtitle: {\r\n        fontSize: 17,\r\n        fontWeight: \"bold\",\r\n        color: \"rgb(235, 232, 231)\",\r\n        marginBottom: 10,\r\n        alignSelf: \"center\"\r\n\r\n    },\r\n    headerImage: {\r\n        flex: 1,\r\n        resizeMode: \"center\",\r\n        justifyContent: 'center',\r\n        opacity: 0.7\r\n    },\r\n    inputsContainer: {\r\n        flex: 1,\r\n        justifyContent: \"space-between\",\r\n        marginTop: 50,\r\n        marginBottom: 50,\r\n    },\r\n    viewHolder: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    },\r\n    preTextInput: {\r\n        fontSize: 17,\r\n        paddingLeft: 20,\r\n        alignSelf: \"flex-start\",\r\n    },\r\n    button: {\r\n        backgroundColor: \"rgb(238, 247, 255)\",\r\n        width: 150,\r\n        height: 45,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        borderRadius: 10,\r\n        marginTop: 10,\r\n    },\r\n    buttonText: {\r\n        fontSize: 20\r\n    },\r\n    textInput: {\r\n        display: \"flex\",\r\n        backgroundColor: \"white\",\r\n        width: \"95%\",\r\n        marginTop: 5,\r\n        borderRadius: 5,\r\n        fontSize: 20\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}