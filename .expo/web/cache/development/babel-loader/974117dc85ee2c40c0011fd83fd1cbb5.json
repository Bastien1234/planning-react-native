{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport axios from 'axios';\nimport { UserContext } from \"../context/UserContext\";\nimport URL from \"../utils/URL\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar AddUser = function AddUser(_ref) {\n  var setTeamMembers = _ref.setTeamMembers,\n      addUserToggle = _ref.addUserToggle,\n      setAddUserToggle = _ref.setAddUserToggle;\n\n  var _useContext = useContext(UserContext),\n      userContext = _useContext.userContext,\n      setUserContext = _useContext.setUserContext;\n\n  var serverURL = URL + \"/api/v1/users/signup\";\n  var usersUrl = URL + \"/api/v1/users/getAllUsers/\";\n  var team = userContext.team;\n  var getUrl = usersUrl + team;\n\n  var _useState = useState(\"bottom message\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      bottomMessage = _useState2[0],\n      setBottomMessage = _useState2[1];\n\n  var defaultSettings = {\n    \"firstName\": \"\",\n    \"lastName\": \"\",\n    \"isAdmin\": false,\n    \"daysOff\": [1, 2],\n    \"email\": \"\",\n    \"team\": userContext.team,\n    \"password\": \"\",\n    \"confirmPassword\": \"\"\n  };\n\n  var _useState3 = useState(defaultSettings),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newUserData = _useState4[0],\n      setNewUserData = _useState4[1];\n\n  function addNewUser() {\n    var postResponse, response, users;\n    return _regeneratorRuntime.async(function addNewUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.post(serverURL, newUserData));\n\n          case 3:\n            postResponse = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(axios.get(getUrl));\n\n          case 6:\n            response = _context.sent;\n            users = response.data.data;\n            setTeamMembers(users);\n            setBottomMessage(\"\");\n            setAddUserToggle(!addUserToggle);\n            _context.next = 17;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            setBottomMessage(\"Sorry, wrong inputs\");\n            console.log(_context.t0.message);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  }\n\n  return _jsx(SafeAreaView, {\n    style: styles.globalContainer,\n    children: _jsx(View, {\n      style: styles.header,\n      children: _jsx(Pressable, {\n        onPress: function onPress() {\n          return navigation.navigate(\"Planning\");\n        },\n        children: _jsx(Image, {\n          source: require(\"./../assets/icons/back.png\"),\n          style: styles.png\n        })\n      })\n    })\n  });\n};\n\nexport default AddUser;\nvar styles = StyleSheet.create({\n  globalContainer: {\n    flex: 1,\n    backgroundColor: \"rgb(235, 232, 231)\"\n  },\n  header: {\n    display: \"flex\",\n    width: \"100%\",\n    flexDirection: \"row\",\n    height: 65,\n    backgroundColor: \"rgb(235, 232, 231)\",\n    paddingLeft: 10,\n    paddingRight: 10,\n    justifyContent: \"space-between\",\n    marginBottom: 20\n  },\n  png: {\n    height: 35,\n    width: 35\n  },\n  svg: {\n    height: 30,\n    width: 30\n  },\n  inline: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    margin: 5,\n    borderWidth: 1,\n    borderColor: \"black\",\n    borderRadius: 5,\n    padding: 10,\n    alignItems: \"center\"\n  },\n  textInline: {\n    fontSize: 18,\n    marginLeft: 10\n  },\n  passwordView: {\n    margin: 5,\n    marginLeft: 15,\n    marginBottom: 10\n  },\n  passwordText: {\n    fontSize: 15,\n    marginBottom: 5\n  },\n  passwordTextInput: {\n    height: 50,\n    borderRadius: 10,\n    backgroundColor: \"rgb(209, 204, 203)\",\n    fontSize: 25,\n    paddingLeft: 10\n  },\n  button: {\n    backgroundColor: \"rgb(238, 247, 255)\",\n    width: 150,\n    height: 45,\n    display: \"flex\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 10,\n    marginTop: 10\n  },\n  buttonText: {\n    fontSize: 20\n  },\n  adminContainer: {\n    margin: 10\n  },\n  adminLine: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingLeft: 10,\n    paddingRight: 10,\n    height: 50,\n    borderWidth: 1,\n    borderRadius: 5,\n    alignItems: \"center\",\n    marginBottom: 5\n  },\n  adminText: {\n    fontSize: 15\n  }\n});","map":{"version":3,"sources":["C:/Users/mr b/Desktop/planning-react-native/screens/AddUser.tsx"],"names":["React","useState","useContext","SafeAreaView","axios","UserContext","URL","AddUser","setTeamMembers","addUserToggle","setAddUserToggle","userContext","setUserContext","serverURL","usersUrl","team","getUrl","bottomMessage","setBottomMessage","defaultSettings","newUserData","setNewUserData","addNewUser","post","postResponse","get","response","users","data","console","log","message","styles","globalContainer","header","navigation","navigate","require","png","StyleSheet","create","flex","backgroundColor","display","width","flexDirection","height","paddingLeft","paddingRight","justifyContent","marginBottom","svg","inline","margin","borderWidth","borderColor","borderRadius","padding","alignItems","textInline","fontSize","marginLeft","passwordView","passwordText","passwordTextInput","button","alignSelf","marginTop","buttonText","adminContainer","adminLine","adminText"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\r\nimport { StyleSheet, Text, View, Image, TextInput, Button, Pressable, ImageBackground, ActivityIndicator, ScrollView  } from 'react-native';\r\nimport { CardStyleInterpolators } from 'react-navigation-stack';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { NavigationContext } from 'react-navigation';\r\nimport axios from 'axios';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nimport { UserContext } from '../context/UserContext';\r\n\r\nimport URL from '../utils/URL';\r\n\r\nconst AddUser = ( {setTeamMembers, addUserToggle, setAddUserToggle} ) => {\r\n\r\n    const {userContext, setUserContext} = useContext(UserContext);\r\n\r\n    const serverURL: string = `${URL}/api/v1/users/signup`;\r\n    const usersUrl: string = `${URL}/api/v1/users/getAllUsers/`;\r\n    const team: string = userContext.team;\r\n    const getUrl = usersUrl + team\r\n\r\n    const [bottomMessage, setBottomMessage] = useState(\"bottom message\");\r\n\r\n    interface UserInputs {\r\n        firstName: string,\r\n        lastName: string,\r\n        isAdmin: boolean,\r\n        daysOff: [number, number],\r\n        email: string,\r\n        team: string,\r\n        password: string,\r\n        confirmPassword: string \r\n    }\r\n\r\n    const defaultSettings: UserInputs = {\r\n        \"firstName\": \"\",\r\n        \"lastName\": \"\",\r\n        \"isAdmin\": false,\r\n        \"daysOff\": [1, 2],\r\n        \"email\": \"\",\r\n        \"team\": userContext.team,\r\n        \"password\": \"\",\r\n        \"confirmPassword\": \"\"\r\n    }\r\n\r\n    const [newUserData, setNewUserData] = useState(defaultSettings);\r\n\r\n    async function addNewUser() {\r\n        try {\r\n            // create proper array for days off\r\n            const postResponse = await axios.post(serverURL, newUserData);\r\n\r\n            // Set new users list\r\n            const response = await axios.get(getUrl);\r\n            const users = response.data.data;\r\n            setTeamMembers(users);\r\n            setBottomMessage(\"\");\r\n\r\n            setAddUserToggle(!addUserToggle);\r\n\r\n\r\n        } catch (e) {\r\n            setBottomMessage(\"Sorry, wrong inputs\");\r\n            console.log(e.message)        \r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <SafeAreaView style={styles.globalContainer}>\r\n            <View style={styles.header}>\r\n                <Pressable\r\n                    onPress={() => navigation.navigate(\"Planning\")}>\r\n                    <Image source={require('./../assets/icons/back.png')} style={styles.png}/>\r\n                </Pressable>\r\n            </View>\r\n\r\n                \r\n            \r\n            \r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default AddUser\r\n\r\nconst styles = StyleSheet.create({\r\n    globalContainer: {\r\n        flex: 1,\r\n        backgroundColor: \"rgb(235, 232, 231)\",\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        flexDirection: \"row\",\r\n        height: 65,\r\n        backgroundColor: \"rgb(235, 232, 231)\",\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        justifyContent: \"space-between\",\r\n        marginBottom: 20        \r\n    },\r\n    png: {\r\n        height: 35,\r\n        width: 35\r\n    },\r\n    svg: {\r\n        height: 30,\r\n        width: 30\r\n    },\r\n    inline: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        margin: 5,\r\n        borderWidth: 1,\r\n        borderColor: \"black\",\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        alignItems: \"center\"\r\n    },\r\n    textInline: {\r\n        fontSize: 18,\r\n        marginLeft: 10,\r\n    },\r\n    passwordView: {\r\n        margin: 5,\r\n        marginLeft: 15,\r\n        marginBottom: 10\r\n    },\r\n    passwordText: {\r\n        fontSize: 15,\r\n        marginBottom: 5\r\n    },\r\n    passwordTextInput: {\r\n        height: 50,\r\n        borderRadius: 10,\r\n        backgroundColor: \"rgb(209, 204, 203)\",\r\n        fontSize: 25,\r\n        paddingLeft: 10,\r\n    },\r\n    button: {\r\n        backgroundColor: \"rgb(238, 247, 255)\",\r\n        width: 150,\r\n        height: 45,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        alignSelf: \"center\",\r\n        justifyContent: \"center\",\r\n        borderRadius: 10,\r\n        marginTop: 10,\r\n    },\r\n    buttonText: {\r\n        fontSize: 20\r\n    },\r\n    adminContainer: {\r\n        margin: 10,\r\n    },\r\n    adminLine: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        height: 50,\r\n        borderWidth: 1,\r\n        borderRadius: 5,\r\n        alignItems: \"center\",\r\n        marginBottom: 5\r\n    },\r\n    adminText: {\r\n        fontSize: 15,\r\n\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}