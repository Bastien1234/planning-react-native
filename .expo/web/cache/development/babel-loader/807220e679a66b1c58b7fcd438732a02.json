{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { CardStyleInterpolators } from 'react-navigation-stack';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { NavigationContext } from 'react-navigation';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as ScreenOrientation from 'expo-screen-orientation';\nimport { UserContext } from \"./../context/UserContext\";\nimport URL from \"../utils/URL\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar backendURL = URL + \"/api/v1/users/login\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  console.log(\"rendering login screen\");\n\n  var _useContext = useContext(UserContext),\n      userContext = _useContext.userContext,\n      setUserContext = _useContext.setUserContext;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errMessage = _useState6[0],\n      setErrMessage = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLoading = _useState8[0],\n      setIsLoading = _useState8[1];\n\n  var storeToken = function storeToken(value) {\n    return _regeneratorRuntime.async(function storeToken$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', value));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0.message);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var signInOnClick = function signInOnClick() {\n    var bodyConfig, response, u;\n    return _regeneratorRuntime.async(function signInOnClick$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(email === \"\")) {\n              _context2.next = 5;\n              break;\n            }\n\n            setErrMessage(\"Provide email\");\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            if (!(password === \"\")) {\n              _context2.next = 8;\n              break;\n            }\n\n            setErrMessage(\"Choose password\");\n            return _context2.abrupt(\"return\");\n\n          case 8:\n            bodyConfig = {\n              email: email.toLowerCase(),\n              password: password\n            };\n            _context2.prev = 9;\n            setIsLoading(true);\n            _context2.next = 13;\n            return _regeneratorRuntime.awrap(axios.post(backendURL, bodyConfig));\n\n          case 13:\n            response = _context2.sent;\n\n            if (!(response.status === 200)) {\n              _context2.next = 21;\n              break;\n            }\n\n            _context2.next = 17;\n            return _regeneratorRuntime.awrap(storeToken(response.data.token));\n\n          case 17:\n            u = response.data.user;\n            setUserContext({\n              loggedIn: true,\n              isAdmin: u.isAdmin,\n              firstName: u.firstName,\n              lastName: u.lastName,\n              team: u.team,\n              email: u.email,\n              id: u._id\n            });\n            setIsLoading(false);\n            navigation.navigate(\"Planning\");\n\n          case 21:\n            _context2.next = 28;\n            break;\n\n          case 23:\n            _context2.prev = 23;\n            _context2.t0 = _context2[\"catch\"](9);\n            setErrMessage(\"Smthng went wrong\");\n            console.log(\"error message : \" + _context2.t0.message);\n            setIsLoading(false);\n\n          case 28:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[9, 23]], Promise);\n  };\n\n  return _jsx(SafeAreaView, {\n    style: styles.globalContainer,\n    children: isLoading === true ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"rgb(110, 116, 170)\",\n      style: {\n        paddingTop: 150\n      }\n    }) : _jsxs(View, {\n      style: {\n        flex: 1\n      },\n      children: [_jsx(View, {\n        style: styles.header,\n        children: _jsx(Text, {\n          style: styles.headerTitle,\n          children: \"Planning Manager\"\n        })\n      }), _jsxs(View, {\n        style: styles.inputsContainer,\n        children: [_jsxs(View, {\n          style: styles.viewHolder,\n          children: [_jsx(Text, {\n            style: styles.preTextInput,\n            children: \"Enter email\"\n          }), _jsx(TextInput, {\n            style: styles.textInput,\n            placeholder: \"\",\n            value: email,\n            onChangeText: setEmail\n          }), _jsx(View, {\n            style: {\n              marginTop: 20\n            }\n          }), _jsx(Text, {\n            style: styles.preTextInput,\n            children: \"Enter password\"\n          }), _jsx(TextInput, {\n            secureTextEntry: true,\n            style: styles.textInput,\n            placeholder: \"\",\n            value: password,\n            onChangeText: setPassword\n          }), _jsx(View, {\n            style: {\n              marginTop: 30\n            }\n          }), _jsx(Pressable, {\n            style: styles.button,\n            onPress: function onPress() {\n              return signInOnClick();\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Sign In\"\n            })\n          }), _jsx(Text, {\n            style: {\n              color: \"rgb(168, 66, 50)\",\n              marginTop: 15,\n              fontSize: 25\n            },\n            children: errMessage\n          })]\n        }), _jsx(View, {\n          style: {\n            paddingBottom: 30\n          }\n        }), _jsxs(View, {\n          style: styles.viewHolder,\n          children: [_jsx(Text, {\n            style: {\n              fontSize: 18\n            },\n            children: \"New here ?\"\n          }), _jsx(Pressable, {\n            style: styles.button,\n            onPress: function onPress() {\n              return navigation.navigate(\"NewTeam\");\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Start New Team\"\n            })\n          })]\n        })]\n      })]\n    })\n  });\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  globalContainer: {\n    flex: 1,\n    backgroundColor: \"rgb(235, 232, 231)\"\n  },\n  header: {\n    display: \"flex\",\n    height: 65,\n    marginTop: 50,\n    backgroundColor: \"rgb(235, 232, 231)\",\n    justifyContent: \"center\"\n  },\n  headerTitle: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    color: \"rgb(110, 116, 170)\",\n    alignSelf: \"center\"\n  },\n  headerImage: {\n    flex: 1,\n    resizeMode: \"center\",\n    justifyContent: 'center',\n    opacity: 0.7\n  },\n  inputsContainer: {\n    flex: 1,\n    justifyContent: \"space-between\",\n    marginTop: 50,\n    marginBottom: 50\n  },\n  viewHolder: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  preTextInput: {\n    fontSize: 17,\n    paddingLeft: 20,\n    alignSelf: \"flex-start\"\n  },\n  button: {\n    backgroundColor: \"rgb(238, 247, 255)\",\n    width: 150,\n    height: 45,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 10,\n    marginTop: 10\n  },\n  buttonText: {\n    fontSize: 20\n  },\n  textInput: {\n    display: \"flex\",\n    borderWidth: 1,\n    borderLeftColor: \"black\",\n    borderBottomColor: \"black\",\n    borderTopColor: \"rgb(235, 232, 231)\",\n    borderRightColor: \"rgb(235, 232, 231)\",\n    width: \"95%\",\n    marginTop: 5,\n    borderRadius: 3,\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["/Users/bastien/Desktop/planning-react-native/screens/LoginScreen.jsx"],"names":["React","useState","useContext","CardStyleInterpolators","SafeAreaView","NavigationContext","axios","AsyncStorage","ScreenOrientation","UserContext","URL","backendURL","LoginScreen","navigation","console","log","userContext","setUserContext","email","setEmail","password","setPassword","errMessage","setErrMessage","isLoading","setIsLoading","storeToken","value","setItem","message","signInOnClick","bodyConfig","toLowerCase","post","response","status","data","token","u","user","loggedIn","isAdmin","firstName","lastName","team","id","_id","navigate","styles","globalContainer","paddingTop","flex","header","headerTitle","inputsContainer","viewHolder","preTextInput","textInput","marginTop","button","buttonText","color","fontSize","paddingBottom","StyleSheet","create","backgroundColor","display","height","justifyContent","fontWeight","alignSelf","headerImage","resizeMode","opacity","marginBottom","alignItems","paddingLeft","width","borderRadius","borderWidth","borderLeftColor","borderBottomColor","borderTopColor","borderRightColor"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { StyleSheet, Text, View, TextInput, Button, Pressable, ImageBackground, ActivityIndicator  } from 'react-native';\nimport { CardStyleInterpolators } from 'react-navigation-stack';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { NavigationContext } from 'react-navigation';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport * as ScreenOrientation from 'expo-screen-orientation';\n\nimport { UserContext } from './../context/UserContext';\n\nimport URL from '../utils/URL';\n\nconst backendURL = `${URL}/api/v1/users/login`;\n\n\n// import backgroundImage from '../assets/backgroundImages/mobile-background-image.jpg';\n\nconst LoginScreen = ({ navigation }) => {\n\n    console.log(\"rendering login screen\")\n\n    const { userContext, setUserContext } = useContext(UserContext);\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errMessage, setErrMessage] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n\n    // Loggin existing user\n\n    const storeToken = async (value) => {\n        try {\n          await AsyncStorage.setItem('token', value)\n        } catch (e) {\n          console.log(e.message);\n        }\n      }\n\n    const signInOnClick = async () => {\n        // Errors handled on front end\n        if (email === \"\") {\n            setErrMessage(\"Provide email\");\n            return;\n        }  \n        else if (password === \"\") {\n            setErrMessage(\"Choose password\");\n            return;\n        }\n            \n        // Try to log in with backend\n        const bodyConfig = {\n            email: email.toLowerCase(),\n            password: password\n        }\n\n        try {\n            setIsLoading(true);\n            const response = await axios.post(backendURL, bodyConfig);\n            if (response.status === 200) {\n                // Send token\n                await storeToken(response.data.token);\n                const u = response.data.user;\n                \n                \n                setUserContext({\n                    loggedIn: true,\n                    isAdmin: u.isAdmin,\n                    firstName: u.firstName,\n                    lastName: u.lastName,\n                    team: u.team,\n                    email: u.email,\n                    id: u._id\n                });\n\n                setIsLoading(false)\n\n                navigation.navigate(\"Planning\");\n            }\n            \n        } catch(e) {\n            setErrMessage(\"Smthng went wrong\");\n            console.log(\"error message : \" + e.message)\n            setIsLoading(false);\n        }\n\n    }\n\n\n\n    return (\n\n        \n        \n        <SafeAreaView style={styles.globalContainer}>\n\n        {\n            (isLoading===true) ? <ActivityIndicator size=\"large\" color=\"rgb(110, 116, 170)\" style={{paddingTop: 150}}/> : \n              \n            \n            <View style={{flex:1}}>\n                <View style={styles.header}>\n                    <Text style={styles.headerTitle}>Planning Manager</Text>\n                </View>\n\n                {/* App */}\n                <View style={styles.inputsContainer}>\n                    <View style={styles.viewHolder}>\n                        <Text style={styles.preTextInput}>Enter email</Text>\n                        <TextInput \n                            style={styles.textInput} \n                            placeholder=\"\" \n                            value={email}\n                            onChangeText={setEmail}\n                            />\n\n                        <View style={{marginTop: 20}}></View>\n                        <Text style={styles.preTextInput}>Enter password</Text>\n                        <TextInput \n                            secureTextEntry={true}\n                            style={styles.textInput} \n                            placeholder=\"\"\n                            value={password}\n                            onChangeText={setPassword}\n                            />\n\n                        <View style={{marginTop: 30}}></View>\n\n\n                        <Pressable style={styles.button}\n                            onPress={() => signInOnClick()}\n                        >\n                            <Text style={styles.buttonText}>Sign In</Text>\n                        </Pressable>\n                        <Text style={{color: \"rgb(168, 66, 50)\", marginTop: 15, fontSize: 25}}>{errMessage}</Text>\n                    </View>\n\n                    {/* Separator */}\n                    <View style={{paddingBottom: 30}}></View>\n\n                    <View style={styles.viewHolder}>\n                        <Text style={{ fontSize: 18 }}>New here ?</Text>\n\n                        <Pressable style={styles.button}\n                        onPress={()=> navigation.navigate(\"NewTeam\")}>\n                            <Text style={styles.buttonText}>Start New Team</Text>\n                        </Pressable>\n\n                    </View>\n                </View>     \n            </View>\n\n        }\n            \n        </SafeAreaView>\n    )\n}\n\nexport default LoginScreen\n\nconst styles = StyleSheet.create({\n    globalContainer: {\n        flex: 1,\n        // backgroundColor: \"rgb(110, 116, 170)\",\n        backgroundColor: \"rgb(235, 232, 231)\",\n    },\n    header: {\n        display: \"flex\",\n        height: 65,\n        marginTop: 50,\n        backgroundColor: \"rgb(235, 232, 231)\",\n        justifyContent: \"center\"\n    },\n    headerTitle: {\n        fontSize: 30,\n        fontWeight: \"bold\",\n        color: \"rgb(110, 116, 170)\",\n        // marginTop: 50,\n        // marginBottom: 15,\n        alignSelf: \"center\"\n    },\n    headerImage: {\n        flex: 1,\n        resizeMode: \"center\",\n        justifyContent: 'center',\n        opacity: 0.7\n    },\n    inputsContainer: {\n        flex: 1,\n        justifyContent: \"space-between\",\n        marginTop: 50,\n        marginBottom: 50,\n    },\n    viewHolder: {\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    preTextInput: {\n        fontSize: 17,\n        paddingLeft: 20,\n        alignSelf: \"flex-start\",\n    },\n    button: {\n        backgroundColor: \"rgb(238, 247, 255)\",\n        width: 150,\n        height: 45,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        borderRadius: 10,\n        marginTop: 10,\n    },\n    buttonText: {\n        fontSize: 20\n    },\n    textInput: {\n        display: \"flex\",\n        // backgroundColor: \"white\",\n        borderWidth: 1,\n        borderLeftColor: \"black\",\n        borderBottomColor: \"black\",\n        borderTopColor: \"rgb(235, 232, 231)\",\n        borderRightColor: \"rgb(235, 232, 231)\",\n        width: \"95%\",\n        marginTop: 5,\n        borderRadius: 3,\n        fontSize: 20,\n    }\n})\n"]},"metadata":{},"sourceType":"module"}