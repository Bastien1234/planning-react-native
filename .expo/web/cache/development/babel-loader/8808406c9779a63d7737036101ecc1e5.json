{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport axios from 'axios';\nimport { UserContext } from \"../context/UserContext\";\nimport URL from \"../utils/URL\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AddUser = function AddUser(_ref) {\n  var setTeamMembers = _ref.setTeamMembers,\n      addUserToggle = _ref.addUserToggle,\n      setAddUserToggle = _ref.setAddUserToggle;\n\n  var _useContext = useContext(UserContext),\n      userContext = _useContext.userContext,\n      setUserContext = _useContext.setUserContext;\n\n  var serverURL = URL + \"/api/v1/users/signup\";\n  var usersUrl = URL + \"/api/v1/users/getAllUsers/\";\n  var team = userContext.team;\n  var getUrl = usersUrl + team;\n\n  var _useState = useState(\"bottom message\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      bottomMessage = _useState2[0],\n      setBottomMessage = _useState2[1];\n\n  var defaultSettings = {\n    \"firstName\": \"\",\n    \"lastName\": \"\",\n    \"isAdmin\": false,\n    \"daysOff\": [1, 2],\n    \"email\": \"\",\n    \"team\": userContext.team,\n    \"password\": \"\",\n    \"confirmPassword\": \"\"\n  };\n\n  var _useState3 = useState(defaultSettings),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newUserData = _useState4[0],\n      setNewUserData = _useState4[1];\n\n  function addNewUser() {\n    var postResponse, response, users;\n    return _regeneratorRuntime.async(function addNewUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.post(serverURL, newUserData));\n\n          case 3:\n            postResponse = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(axios.get(getUrl));\n\n          case 6:\n            response = _context.sent;\n            users = response.data.data;\n            setTeamMembers(users);\n            setBottomMessage(\"\");\n            setAddUserToggle(!addUserToggle);\n            _context.next = 17;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            setBottomMessage(\"Sorry, wrong inputs\");\n            console.log(_context.t0.message);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  }\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Let's add a new user\"\n    }), _jsxs(View, {\n      style: styles.passwordView,\n      children: [_jsx(Text, {\n        style: styles.passwordText,\n        children: \"Confirm New Password\"\n      }), _jsx(TextInput, {\n        style: styles.passwordTextInput,\n        placeholder: \"\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          setNewPasswordValue(function (previousData) {\n            return _objectSpread(_objectSpread({}, previousData), {}, {\n              passwordConfirm: text.toString()\n            });\n          });\n        }\n      })]\n    })]\n  });\n};\n\nexport default AddUser;\nvar styles = StyleSheet.create({\n  globalContainer: {\n    flex: 1,\n    backgroundColor: \"rgb(235, 232, 231)\"\n  },\n  passwordView: {\n    margin: 5,\n    marginLeft: 15,\n    marginBottom: 10\n  },\n  passwordText: {\n    fontSize: 15,\n    marginBottom: 5\n  },\n  passwordTextInput: {\n    height: 50,\n    borderRadius: 10,\n    backgroundColor: \"rgb(209, 204, 203)\",\n    fontSize: 25,\n    paddingLeft: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/mr b/Desktop/planning-react-native/screens/AddUser.tsx"],"names":["React","useState","useContext","axios","UserContext","URL","AddUser","setTeamMembers","addUserToggle","setAddUserToggle","userContext","setUserContext","serverURL","usersUrl","team","getUrl","bottomMessage","setBottomMessage","defaultSettings","newUserData","setNewUserData","addNewUser","post","postResponse","get","response","users","data","console","log","message","styles","passwordView","passwordText","passwordTextInput","text","setNewPasswordValue","previousData","passwordConfirm","toString","StyleSheet","create","globalContainer","flex","backgroundColor","margin","marginLeft","marginBottom","fontSize","height","borderRadius","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\r\nimport { StyleSheet, Text, View, Image, TextInput, Button, Pressable, ImageBackground, ActivityIndicator, ScrollView  } from 'react-native';\r\nimport { CardStyleInterpolators } from 'react-navigation-stack';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { NavigationContext } from 'react-navigation';\r\nimport axios from 'axios';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nimport { UserContext } from '../context/UserContext';\r\n\r\nimport URL from '../utils/URL';\r\n\r\nconst AddUser = ( {setTeamMembers, addUserToggle, setAddUserToggle} ) => {\r\n\r\n    const {userContext, setUserContext} = useContext(UserContext);\r\n\r\n    const serverURL: string = `${URL}/api/v1/users/signup`;\r\n    const usersUrl: string = `${URL}/api/v1/users/getAllUsers/`;\r\n    const team: string = userContext.team;\r\n    const getUrl = usersUrl + team\r\n\r\n    const [bottomMessage, setBottomMessage] = useState(\"bottom message\");\r\n\r\n    interface UserInputs {\r\n        firstName: string,\r\n        lastName: string,\r\n        isAdmin: boolean,\r\n        daysOff: [number, number],\r\n        email: string,\r\n        team: string,\r\n        password: string,\r\n        confirmPassword: string \r\n    }\r\n\r\n    const defaultSettings: UserInputs = {\r\n        \"firstName\": \"\",\r\n        \"lastName\": \"\",\r\n        \"isAdmin\": false,\r\n        \"daysOff\": [1, 2],\r\n        \"email\": \"\",\r\n        \"team\": userContext.team,\r\n        \"password\": \"\",\r\n        \"confirmPassword\": \"\"\r\n    }\r\n\r\n    const [newUserData, setNewUserData] = useState(defaultSettings);\r\n\r\n    async function addNewUser() {\r\n        try {\r\n            // create proper array for days off\r\n            const postResponse = await axios.post(serverURL, newUserData);\r\n\r\n            // Set new users list\r\n            const response = await axios.get(getUrl);\r\n            const users = response.data.data;\r\n            setTeamMembers(users);\r\n            setBottomMessage(\"\");\r\n\r\n            setAddUserToggle(!addUserToggle);\r\n\r\n\r\n        } catch (e) {\r\n            setBottomMessage(\"Sorry, wrong inputs\");\r\n            console.log(e.message)        \r\n        }\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <Text>Let's add a new user</Text>\r\n\r\n            <View style={styles.passwordView}>\r\n                            <Text style={styles.passwordText}>Confirm New Password</Text>\r\n                            <TextInput \r\n                                style={styles.passwordTextInput}\r\n                                placeholder=\"\"\r\n                                secureTextEntry={true}\r\n                                onChangeText={text => {\r\n                                    setNewPasswordValue(previousData => {\r\n                                        return {...previousData, passwordConfirm: text.toString()}\r\n                                    })\r\n                                }}\r\n                            />\r\n                        </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default AddUser\r\n\r\nconst styles = StyleSheet.create({\r\n    globalContainer: {\r\n        flex: 1,\r\n        backgroundColor: \"rgb(235, 232, 231)\",\r\n    },\r\n    passwordView: {\r\n        margin: 5,\r\n        marginLeft: 15,\r\n        marginBottom: 10\r\n    },\r\n    passwordText: {\r\n        fontSize: 15,\r\n        marginBottom: 5\r\n    },\r\n    passwordTextInput: {\r\n        height: 50,\r\n        borderRadius: 10,\r\n        backgroundColor: \"rgb(209, 204, 203)\",\r\n        fontSize: 25,\r\n        paddingLeft: 10,\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}